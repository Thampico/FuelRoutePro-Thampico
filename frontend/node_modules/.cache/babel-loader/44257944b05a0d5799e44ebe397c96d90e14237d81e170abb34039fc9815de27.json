{"ast":null,"code":"import _objectSpread from\"/Users/saloniangre/Downloads/Fuelroute/FinalFRP/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";//frontend/src/components/FuelRouteApp.js - ERROR FIXES ONLY\nimport React,{useState,useEffect}from'react';import RouteMap from'./RouteMap';import CostComparisonChart from'./CostComparisonChart';import'./RouteMap.css';// API Service - inlined to avoid external imports\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:5001/api';const makeRequest=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(API_BASE_URL).concat(endpoint);const defaultOptions={headers:_objectSpread({'Content-Type':'application/json'},options.headers)};try{const response=await fetch(url,_objectSpread(_objectSpread({},defaultOptions),options));if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.error||\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('API request failed:',error);throw error;}};// API functions\nconst checkApiHealth=()=>makeRequest('/health');const getFuelTypes=()=>makeRequest('/fuel-types');const getRouteHistory=()=>makeRequest('/routes');const calculateRouteCost=routeData=>makeRequest('/calculate-cost',{method:'POST',body:JSON.stringify(routeData)});// Add these new API functions after your existing API functions\nconst getRouteVisualization=(routeOptions,routeData)=>makeRequest('/routing/visualization',{method:'POST',body:JSON.stringify({routeOptions,origin:routeData.origin,destination:routeData.destination,fuelType:routeData.fuelType})});const getLocationsData=()=>makeRequest('/routing/locations');const FuelRouteApp=_ref=>{var _locationSuggestions$,_result$calculation,_result$data$aiInsigh,_result$data$aiInsigh2;let{backendAPI,apiStatus}=_ref;// Form state\nconst[formData,setFormData]=useState({fuelType:'hydrogen',volume:'',volumeUnit:'tonnes',origin:'',destination:'',intermediateHub:'',transportMode1:'truck',transportMode2:'truck',preference:'cost'});// App state\nconst[result,setResult]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[validationErrors,setValidationErrors]=useState({});const[fuelTypes,setFuelTypes]=useState(['hydrogen','methanol','ammonia']);const[routeHistory,setRouteHistory]=useState([]);const[localApiStatus,setLocalApiStatus]=useState('checking');const[routeInsights,setRouteInsights]=useState('');const[locationSuggestions,setLocationSuggestions]=useState({});const[aiValidating,setAiValidating]=useState(false);const[mapData,setMapData]=useState({routeVisualizations:[],selectedRoute:null,showMap:false,locations:[]});// AI-powered location suggestions (common locations for quick selection)\n// 1. UPDATE: Replace your existing commonLocations array (around line 40-80)\nconst commonLocations=[// Gulf Coast Ports\n'Houston, TX','New Orleans, LA','Mobile, AL','Tampa Bay, FL',// Southeast Atlantic Ports  \n'Savannah, GA','Jacksonville, FL','Miami, FL',// Northeast Corridor Ports\n'New York/NJ','Philadelphia, PA','Norfolk, VA','Boston, MA',// West Coast Ports\n'Long Beach, CA','Los Angeles, CA','Seattle, WA','Portland, OR','San Francisco/Oakland, CA',// Inland Transportation Hubs\n'Chicago, IL','St. Louis, MO','Memphis, TN','Duluth-Superior, MN/WI'];const volumeUnits=[{value:'tonnes',label:'Tonnes (metric tons)',factor:1},{value:'kg',label:'Kilograms',factor:0.001},{value:'liters',label:'Liters',factor:0.001},// Approximate for liquid fuels\n{value:'gallons',label:'Gallons (US)',factor:0.00378}];const transportModes=[{value:'truck',label:'Truck',suitable:['local','regional']},{value:'rail',label:'Rail',suitable:['regional','continental']}];// Check API health on component mount\nuseEffect(()=>{const initializeApp=async()=>{try{if(backendAPI&&backendAPI.isConnected){setLocalApiStatus('connected');setFuelTypes(backendAPI.fuelTypes||['hydrogen','methanol','ammonia']);setRouteHistory(backendAPI.routeHistory||[]);}else{await checkApiHealth();setLocalApiStatus('connected');const fuelTypesResponse=await getFuelTypes();setFuelTypes(fuelTypesResponse.data||['hydrogen','methanol','ammonia']);const historyResponse=await getRouteHistory();setRouteHistory(historyResponse.data||[]);}}catch(error){console.error('Failed to initialize app:',error);setLocalApiStatus('error');setError('Unable to connect to backend server. Make sure it\\'s running on port 5001.');// Ensure fuel types are always available even if API fails\nsetFuelTypes(['hydrogen','methanol','ammonia']);}};initializeApp();},[backendAPI]);// Add this new useEffect after your existing useEffect hooks (around line 80)\nuseEffect(()=>{const loadMapData=async()=>{if(result&&result.routeOptions&&Array.isArray(result.routeOptions)&&result.routeOptions.length>0){try{console.log('🗺️ Loading route visualization data...');const mapResponse=await getRouteVisualization(result.routeOptions,formData);if(mapResponse.success&&mapResponse.visualizations){setMapData(prev=>_objectSpread(_objectSpread({},prev),{},{routeVisualizations:mapResponse.visualizations,showMap:true,selectedRoute:mapResponse.visualizations[0]||null}));console.log('✅ Map data loaded:',mapResponse.visualizations.length,'routes');}}catch(error){console.error('❌ Failed to load map data:',error);// Map is optional - don't show error to user\n}}else{setMapData(prev=>_objectSpread(_objectSpread({},prev),{},{showMap:false,routeVisualizations:[]}));}};loadMapData();},[result,formData.origin,formData.destination,formData.fuelType]);// Add this function after your existing helper functions (around line 200)\nconst handleMapRouteSelect=selectedRoute=>{var _result$routeOptions;console.log('🗺️ Map route selected:',selectedRoute.id);setMapData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedRoute}));// Find matching route option and trigger detailed calculation\nconst matchingRouteOption=(_result$routeOptions=result.routeOptions)===null||_result$routeOptions===void 0?void 0:_result$routeOptions.find(route=>route.id===selectedRoute.id||route.name===selectedRoute.name);if(matchingRouteOption){calculateDetailedCost(matchingRouteOption);}};// Route validation and insights\nuseEffect(()=>{if(formData.origin&&formData.destination){validateRoute();}},[formData.origin,formData.destination,formData.intermediateHub,formData.volume,formData.volumeUnit,locationSuggestions]);// REPLACE with this simple validation:\nconst validateLocationBasic=(location,fieldName)=>{const isValid=commonLocations.some(validLocation=>validLocation.toLowerCase().includes(location.toLowerCase())||location.toLowerCase().includes(validLocation.toLowerCase()));const suggestions=_objectSpread({},locationSuggestions);if(isValid){const matchedLocation=commonLocations.find(validLocation=>validLocation.toLowerCase().includes(location.toLowerCase())||location.toLowerCase().includes(validLocation.toLowerCase()));suggestions[fieldName]={valid:true,corrected:matchedLocation||location};setValidationErrors(prev=>{const newErrors=_objectSpread({},prev);delete newErrors[fieldName];return newErrors;});}else{suggestions[fieldName]={valid:false,error:'Please select from the 20 major US ports/hubs'};}setLocationSuggestions(suggestions);};// ✅ NEW: Generate location insights based on validation results\nconst generateLocationInsights=(result,transportMode,fuelType)=>{var _result$transportMode,_result$transportMode2,_result$transportMode3;const insights=[];// Transport mode insights\nif(!((_result$transportMode=result.transportMode)!==null&&_result$transportMode!==void 0&&_result$transportMode.suitable)){insights.push(\"\\u26A0\\uFE0F \".concat(transportMode,\" transport may not be available at this location\"));}else if(result.transportMode.infrastructure==='major_port'){insights.push('Major port facility');}else if(result.transportMode.infrastructure==='major_rail_hub'){insights.push(\"\\uD83D\\uDE82 Major rail hub - excellent for rail transport\");}// Fuel-specific insights\nif(result.fuelRequirements){const reqs=result.fuelRequirements.requirements;if(fuelType==='hydrogen'){insights.push('❄️ Cryogenic facilities required for hydrogen');}else if(fuelType==='ammonia'){insights.push(\"\\uD83E\\uDDCA Refrigerated storage required for ammonia\");}}// Warnings\nif(((_result$transportMode2=result.transportMode)===null||_result$transportMode2===void 0?void 0:(_result$transportMode3=_result$transportMode2.warnings)===null||_result$transportMode3===void 0?void 0:_result$transportMode3.length)>0){insights.push(...result.transportMode.warnings.map(w=>\"\\u26A0\\uFE0F \".concat(w)));}return insights;};const setLocationBasicValidation=(location,fieldName)=>{// Enhanced fallback validation for the 20 US port/hub locations\nconst isValid=commonLocations.some(validLocation=>validLocation.toLowerCase().includes(location.toLowerCase())||location.toLowerCase().includes(validLocation.toLowerCase()));const suggestions=_objectSpread({},locationSuggestions);if(isValid){// Find the matching location from our list\nconst matchedLocation=commonLocations.find(validLocation=>validLocation.toLowerCase().includes(location.toLowerCase())||location.toLowerCase().includes(validLocation.toLowerCase()));let region='Unknown';let type='port';let state='';// Determine region based on location\nconst locationLower=location.toLowerCase();if(locationLower.includes('houston')||locationLower.includes('new orleans')||locationLower.includes('mobile')||locationLower.includes('tampa')){region='Gulf Coast';}else if(locationLower.includes('savannah')||locationLower.includes('jacksonville')||locationLower.includes('miami')){region='Southeast';}else if(locationLower.includes('new york')||locationLower.includes('philadelphia')||locationLower.includes('norfolk')||locationLower.includes('boston')){region='Northeast';}else if(locationLower.includes('long beach')||locationLower.includes('los angeles')||locationLower.includes('seattle')||locationLower.includes('portland')||locationLower.includes('san francisco')||locationLower.includes('oakland')){region='West Coast';}else if(locationLower.includes('chicago')||locationLower.includes('st. louis')||locationLower.includes('memphis')||locationLower.includes('duluth')){region='Inland';}// Extract state\nif(locationLower.includes('tx'))state='TX';else if(locationLower.includes('la'))state='LA';else if(locationLower.includes('al'))state='AL';else if(locationLower.includes('fl'))state='FL';else if(locationLower.includes('ga'))state='GA';else if(locationLower.includes('ny'))state='NY';else if(locationLower.includes('nj'))state='NJ';else if(locationLower.includes('pa'))state='PA';else if(locationLower.includes('va'))state='VA';else if(locationLower.includes('ma'))state='MA';else if(locationLower.includes('ca'))state='CA';else if(locationLower.includes('wa'))state='WA';else if(locationLower.includes('or'))state='OR';else if(locationLower.includes('il'))state='IL';else if(locationLower.includes('mo'))state='MO';else if(locationLower.includes('tn'))state='TN';else if(locationLower.includes('mn'))state='MN';else if(locationLower.includes('wi'))state='WI';// Determine type\nif(locationLower.includes('chicago')||locationLower.includes('st. louis')||locationLower.includes('memphis')||locationLower.includes('duluth')){type='hub';}suggestions[fieldName]={valid:true,corrected:matchedLocation||location,region:region,type:type,state:state};// Clear validation errors for this field when location is valid\nsetValidationErrors(prev=>{const newErrors=_objectSpread({},prev);delete newErrors[fieldName];return newErrors;});}else{suggestions[fieldName]={valid:false,error:'Please select a location from the list of 20 major US ports/hubs'};}setLocationSuggestions(suggestions);};const validateRoute=()=>{const errors={};let insights='';if(formData.origin&&formData.destination){// Check if origin and destination are the same\nif(formData.origin.toLowerCase()===formData.destination.toLowerCase()){errors.destination='Destination cannot be the same as origin';}const originInfo=locationSuggestions.origin;const destInfo=locationSuggestions.destination;// AI-enhanced route type calculation\nlet routeType='unknown';if(originInfo&&destInfo&&originInfo.valid&&destInfo.valid){if(originInfo.region===destInfo.region){routeType='regional';}else if(originInfo.region!==destInfo.region){routeType='long';}// Enhanced insights based on AI analysis\nconst volume=parseFloat(formData.volume);const volumeUnit=formData.volumeUnit;if(volume>0){var _volumeUnits$find;const volumeInTonnes=volume*(((_volumeUnits$find=volumeUnits.find(u=>u.value===volumeUnit))===null||_volumeUnits$find===void 0?void 0:_volumeUnits$find.factor)||1);if(routeType==='regional'&&volumeInTonnes<=5){insights=\"\\uD83D\\uDE9B Short distance within \".concat(originInfo.region,\": Truck transport recommended for cost efficiency.\");}else if(volumeInTonnes>10){insights=\"\\uD83D\\uDEA2 For 10+ tonnes: Rail transport recommended for cost efficiency and environmental benefits. Large volumes benefit from bulk transport modes with lower per-unit costs.\";}else if(routeType==='long'){insights=\"Long route (\".concat(originInfo.region,\" \\u2192 \").concat(destInfo.region,\"): Rail transport recommended via intermediate hub for optimal cost and safety.\");}else if(volumeInTonnes>15){insights=\"\\uD83D\\uDE86 Large volume transport: Consider rail for cost efficiency.\";}// Add fuel-specific insights\nif(formData.fuelType==='hydrogen'){insights+=' Hydrogen requires specialized cryogenic handling protocols.';}else if(formData.fuelType==='ammonia'){insights+=' Ammonia transport requires specialized safety and ventilation systems.';}}}else{// Fallback to basic validation for non-AI validated locations\nconst volume=parseFloat(formData.volume);const volumeUnit=formData.volumeUnit;if(volume>0){var _volumeUnits$find2;const volumeInTonnes=volume*(((_volumeUnits$find2=volumeUnits.find(u=>u.value===volumeUnit))===null||_volumeUnits$find2===void 0?void 0:_volumeUnits$find2.factor)||1);if(volumeInTonnes<=5){insights='Small volume: Truck transport typically most cost-effective for shorter distances.';}else if(volumeInTonnes>10){insights='For 10+ tonnes: Rail transport recommended for cost efficiency and environmental benefits.';}}}// Validate transport modes with AI insights\nif(routeType==='long'&&formData.transportMode1==='truck'&&!formData.intermediateHub){errors.transport='Long truck transport requires an intermediate hub or consider rail transport for cross-continental delivery';}}setValidationErrors(errors);setRouteInsights(insights);};const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Clear specific validation errors when user starts fixing them\nif(validationErrors[name]){setValidationErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:''}));}if(['origin','destination','intermediateHub'].includes(name)&&value.length>2){validateLocationBasic(value,name);}};// FIXED: Enhanced isShortRoute function with improved California detection\n// REPLACE the isShortRoute() function in FuelRouteApp.js with this enhanced version\nconst isShortRoute=()=>{if(!formData.origin||!formData.destination)return false;const origin=formData.origin.toLowerCase();const dest=formData.destination.toLowerCase();console.log('🔍 Route check:',{origin,dest});// **PRIORITY 1: California Routes (Same State - Most Common)**\nconst californiaRoutes=[['los angeles','long beach'],// ~20 miles - VERY SHORT\n['los angeles','san francisco'],// ~380 miles\n['los angeles','oakland'],// ~380 miles  \n['long beach','san francisco'],// ~400 miles\n['long beach','oakland'],// ~400 miles\n['san francisco','oakland']// ~15 miles - VERY SHORT\n];const isCaliforniaRoute=californiaRoutes.some(_ref2=>{let[city1,city2]=_ref2;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isCaliforniaRoute){console.log('✅ California short route detected');return true;}// **PRIORITY 2: Northeast Corridor (Very Close)**\nconst northeastRoutes=[['new york','philadelphia'],// ~95 miles\n['new york','boston'],// ~215 miles\n['philadelphia','boston']// ~300 miles\n];const isNortheastRoute=northeastRoutes.some(_ref3=>{let[city1,city2]=_ref3;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isNortheastRoute){console.log('✅ Northeast corridor short route detected');return true;}// **PRIORITY 3: Southeast Coast (Regional)**\nconst southeastRoutes=[['tampa','miami'],// ~280 miles\n['jacksonville','miami'],// ~350 miles\n['savannah','jacksonville'],// ~140 miles\n['tampa','jacksonville']// ~200 miles\n];const isSoutheastRoute=southeastRoutes.some(_ref4=>{let[city1,city2]=_ref4;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isSoutheastRoute){console.log('✅ Southeast regional short route detected');return true;}// **PRIORITY 4: Gulf Coast (Regional)**\nconst gulfRoutes=[['houston','new orleans'],// ~350 miles\n['new orleans','mobile'],// ~150 miles\n['houston','mobile']// ~350 miles\n];const isGulfRoute=gulfRoutes.some(_ref5=>{let[city1,city2]=_ref5;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isGulfRoute){console.log('✅ Gulf coast short route detected');return true;}// **PRIORITY 5: Pacific Northwest (Regional)**\nconst pacificNorthwestRoutes=[['seattle','portland']// ~170 miles\n];const isPacificNorthwestRoute=pacificNorthwestRoutes.some(_ref6=>{let[city1,city2]=_ref6;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isPacificNorthwestRoute){console.log('✅ Pacific Northwest short route detected');return true;}// **PRIORITY 6: Midwest/Great Lakes (Regional)**\nconst midwestRoutes=[['chicago','st. louis'],// ~300 miles\n['chicago','memphis'],// ~530 miles\n['memphis','st. louis'],// ~300 miles\n['chicago','duluth'],// ~350 miles\n['chicago','superior']// ~350 miles\n];const isMidwestRoute=midwestRoutes.some(_ref7=>{let[city1,city2]=_ref7;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isMidwestRoute){console.log('✅ Midwest regional short route detected');return true;}// **PRIORITY 7: Mid-Atlantic (Regional)**\nconst midAtlanticRoutes=[['norfolk','philadelphia'],// ~300 miles\n['norfolk','new york']// ~350 miles\n];const isMidAtlanticRoute=midAtlanticRoutes.some(_ref8=>{let[city1,city2]=_ref8;return origin.includes(city1)&&dest.includes(city2)||origin.includes(city2)&&dest.includes(city1);});if(isMidAtlanticRoute){console.log('✅ Mid-Atlantic short route detected');return true;}// **FALLBACK: Check AI validation if available**\nconst originInfo=locationSuggestions.origin;const destInfo=locationSuggestions.destination;if(originInfo&&destInfo&&originInfo.valid&&destInfo.valid){const isDomestic=originInfo.region===destInfo.region&&originInfo.country===destInfo.country;console.log('🤖 AI route check:',{originRegion:originInfo.region,destRegion:destInfo.region,originCountry:originInfo.country,destCountry:destInfo.country,isDomestic});return isDomestic;}// **FINAL FALLBACK: General US domestic detection**\nconst usStates=['ca','california','wa','washington','ny','new york','texas','tx','florida','fl','illinois','il','oregon','or','massachusetts','ma','pennsylvania','pa','virginia','va','georgia','ga','louisiana','la','alabama','al','missouri','mo','tennessee','tn','minnesota','mn','wisconsin','wi'];const usCities=['los angeles','san francisco','oakland','seattle','houston','chicago','new york','miami','boston','philadelphia','long beach','portland','memphis','st. louis','norfolk','savannah','tampa','mobile','duluth'];const originUS=usStates.some(state=>origin.includes(state))||usCities.some(city=>origin.includes(city))||origin.includes('usa')||origin.includes('united states');const destUS=usStates.some(state=>dest.includes(state))||usCities.some(city=>dest.includes(city))||dest.includes('usa')||dest.includes('united states');if(originUS&&destUS){console.log('✅ General Short route detected');return true;}console.log('❌ Long route detected');return false;};// FIXED: Function to determine if second transport mode should be shown\nconst shouldShowSecondTransportMode=()=>{const hasIntermediateHub=formData.intermediateHub&&formData.intermediateHub.trim()!=='';const isShort=isShortRoute();console.log('🚦 Transport mode check:',{hasIntermediateHub,isShort});// Show second transport mode ONLY if:\n// 1. There's an actual intermediate hub provided, OR\n// 2. It's NOT a short route (meaning it's long route) AND no intermediate hub\nconst shouldShow=hasIntermediateHub||!isShort&&!hasIntermediateHub;console.log('🚦 Should show second transport mode:',shouldShow);return shouldShow;};// Updated handleSubmit with proper validation\nconst handleSubmit=async function(){let mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'options';setLoading(true);setError('');setResult(null);try{var _volumeUnits$find3;// Validate required fields\nconst errors={};if(!formData.fuelType)errors.fuelType='Please select a fuel type';if(!formData.volume)errors.volume='Please enter volume';if(!formData.origin)errors.origin='Please enter origin';if(!formData.destination)errors.destination='Please enter destination';// Validate locations - check if they are in the common locations list\nif(formData.origin&&!commonLocations.some(loc=>loc.toLowerCase()===formData.origin.toLowerCase()||loc.toLowerCase().includes(formData.origin.toLowerCase())||formData.origin.toLowerCase().includes(loc.toLowerCase()))){// Only set error if AI validation also failed\nif(locationSuggestions.origin&&locationSuggestions.origin.valid===false){errors.origin='Please enter a valid origin location';}}if(formData.destination&&!commonLocations.some(loc=>loc.toLowerCase()===formData.destination.toLowerCase()||loc.toLowerCase().includes(formData.destination.toLowerCase())||formData.destination.toLowerCase().includes(loc.toLowerCase()))){// Only set error if AI validation also failed\nif(locationSuggestions.destination&&locationSuggestions.destination.valid===false){errors.destination='Please enter a valid destination location';}}// Only validate intermediate hub if it's actually provided\nif(formData.intermediateHub&&formData.intermediateHub.trim()!==''){if(!commonLocations.some(loc=>loc.toLowerCase()===formData.intermediateHub.toLowerCase()||loc.toLowerCase().includes(formData.intermediateHub.toLowerCase())||formData.intermediateHub.toLowerCase().includes(loc.toLowerCase()))){// Only set error if AI validation also failed\nif(locationSuggestions.intermediateHub&&locationSuggestions.intermediateHub.valid===false){errors.intermediateHub='Please enter a valid intermediate hub location';}}}// Add existing validation errors (only if they exist)\nObject.assign(errors,validationErrors);if(Object.keys(errors).length>0){setValidationErrors(errors);throw new Error('Please fix the validation errors above');}// Convert volume to tonnes for API\nconst volumeInTonnes=parseFloat(formData.volume)*(((_volumeUnits$find3=volumeUnits.find(u=>u.value===formData.volumeUnit))===null||_volumeUnits$find3===void 0?void 0:_volumeUnits$find3.factor)||1);// Prepare data for API\nconst requestData=_objectSpread(_objectSpread({},formData),{},{volume:volumeInTonnes,// Always send in tonnes to backend\nvolumeUnit:'tonnes',// Backend expects tonnes\nrequestType:mode,// 'options' for multiple routes, 'single' for best recommendation\npreference:formData.preference});console.log(\"Sending \".concat(mode,\" request:\"),requestData);if(backendAPI&&backendAPI.isConnected&&apiStatus==='connected'){console.log(\"\\uD83E\\uDD16 Using backend AI calculation (\".concat(mode,\" mode)...\"));const response=await backendAPI.calculateCost(requestData);console.log('Received response:',response);setResult(response);if(backendAPI.refreshHistory){await backendAPI.refreshHistory();}}else{console.log(\"\\uD83D\\uDD27 Using direct API call (\".concat(mode,\" mode)...\"));const response=await calculateRouteCost(requestData);console.log('Received response:',response);setResult(response);const historyResponse=await getRouteHistory();setRouteHistory(historyResponse.data||[]);}}catch(error){setError(error.message);console.error('Calculation failed:',error);}finally{setLoading(false);}};// ✅ FIXED: calculateDetailedCost function with proper debugging and variable declaration\nconst calculateDetailedCost=async selectedRouteOption=>{setLoading(true);setError('');try{var _volumeUnits$find4;console.log('🔍 FRONTEND DEBUG - Selected route option:');console.log('   - ID:',selectedRouteOption.id);console.log('   - Name:',selectedRouteOption.name);console.log('   - Transport modes:',selectedRouteOption.transportModes);console.log('   - Estimated cost:',selectedRouteOption.estimatedCost);console.log('🎯 Getting detailed cost for route:',selectedRouteOption.id);// Convert volume to tonnes for API\nconst volumeInTonnes=parseFloat(formData.volume)*(((_volumeUnits$find4=volumeUnits.find(u=>u.value===formData.volumeUnit))===null||_volumeUnits$find4===void 0?void 0:_volumeUnits$find4.factor)||1);// Prepare data for detailed calculation\nconst requestData=_objectSpread(_objectSpread({},formData),{},{volume:volumeInTonnes,volumeUnit:'tonnes',requestType:'single',// This tells backend to return detailed calculation\nselectedRoute:selectedRouteOption,preference:formData.preference});console.log('Requesting detailed calculation:',requestData);// ✅ FIXED: Properly declare detailedResponse variable\nlet detailedResponse;if(backendAPI&&backendAPI.isConnected&&apiStatus==='connected'){console.log('🤖 Using backend API for detailed calculation...');detailedResponse=await backendAPI.calculateCost(requestData);}else{console.log('🔧 Using direct API call for detailed calculation...');detailedResponse=await calculateRouteCost(requestData);}console.log('Detailed calculation response:',detailedResponse);// Update result to show detailed calculation\nsetResult(detailedResponse);// Refresh history\nif(backendAPI&&backendAPI.refreshHistory){await backendAPI.refreshHistory();}else{const historyResponse=await getRouteHistory();setRouteHistory(historyResponse.data||[]);}}catch(error){setError(\"Failed to get detailed calculation: \".concat(error.message));console.error('Detailed calculation failed:',error);}finally{setLoading(false);}};const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount);};const formatDate=dateString=>{return new Date(dateString).toLocaleString();};const formatTrucks=count=>{if(!count)return'';return count===1?'1 truck':\"\".concat(count,\" trucks\");};const currentApiStatus=apiStatus||localApiStatus;// API Status indicator with AI enhancement\nconst ApiStatusIndicator=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-4 p-2 rounded \".concat(currentApiStatus==='connected'?'bg-green-100 text-green-800':currentApiStatus==='error'?'bg-red-100 text-red-800':'bg-yellow-100 text-yellow-800'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full \".concat(currentApiStatus==='connected'?'bg-green-500':currentApiStatus==='error'?'bg-red-500':'bg-yellow-500')}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:currentApiStatus==='connected'?'Backend Connected (AI Enhanced) - 20 US Ports/Hubs':currentApiStatus==='error'?'Backend Disconnected':'Checking Connection...'})]});return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 py-8 px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 mb-8 text-center\",children:\"FuelRoute Pro Cost Calculator\"}),/*#__PURE__*/_jsx(ApiStatusIndicator,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-start px-4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6 max-w-xl mx-auto relative overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0 pointer-events-none\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 left-8 w-12 h-12 bg-blue-100 rounded-full opacity-30 animate-bounce\",style:{animationDelay:'0s',animationDuration:'3s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-16 right-12 w-8 h-8 bg-green-100 rounded-full opacity-40 animate-pulse\",style:{animationDelay:'1s',animationDuration:'2s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-20 left-16 w-6 h-6 bg-purple-100 rounded-full opacity-35 animate-bounce\",style:{animationDelay:'2s',animationDuration:'4s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-8 right-8 w-10 h-10 bg-indigo-100 rounded-full opacity-25 animate-pulse\",style:{animationDelay:'0.5s',animationDuration:'3.5s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-32 left-4 w-4 h-4 bg-teal-100 rounded-full opacity-45 animate-bounce\",style:{animationDelay:'1.5s',animationDuration:'2.5s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-32 right-20 w-14 h-14 bg-cyan-100 rounded-full opacity-20 animate-pulse\",style:{animationDelay:'3s',animationDuration:'4s'}})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4 relative z-10\",children:\"Calculate Transport Cost - US Ports & Hubs\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Fuel Type *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"fuelType\",value:formData.fuelType,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",required:true,children:[console.log('🔍 Fuel Types:',fuelTypes),fuelTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type.charAt(0).toUpperCase()+type.slice(1)},type))]}),validationErrors.fuelType&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.fuelType})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Volume *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"volume\",value:formData.volume,onChange:handleInputChange,min:\"0.1\",step:\"0.1\",className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",placeholder:\"Enter volume\",required:true}),validationErrors.volume&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.volume})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"select\",{name:\"volumeUnit\",value:formData.volumeUnit,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:volumeUnits.map(unit=>/*#__PURE__*/_jsx(\"option\",{value:unit.value,children:unit.label},unit.value))})]})]}),formData.volume&&parseFloat(formData.volume)>0&&formData.fuelType&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-600\",children:\"\\uD83D\\uDE9B\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800\",children:\"Quick Truck Requirements\"})]}),(_volumeUnits$find5=>{const volumeInTonnes=parseFloat(formData.volume)*(((_volumeUnits$find5=volumeUnits.find(u=>u.value===formData.volumeUnit))===null||_volumeUnits$find5===void 0?void 0:_volumeUnits$find5.factor)||1);const truckCapacities={hydrogen:8,methanol:12,ammonia:10,gasoline:12,diesel:12,ethanol:12};const maxCapacity=truckCapacities[formData.fuelType]||10;const trucksNeeded=Math.max(1,Math.ceil(volumeInTonnes/maxCapacity));const utilizationPercent=Math.round(volumeInTonnes/(trucksNeeded*maxCapacity)*100);return/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[trucksNeeded,\" truck\",trucksNeeded>1?'s':'',\" required for \",volumeInTonnes.toFixed(1),\" tonnes of \",formData.fuelType]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs mt-1\",children:[maxCapacity,\" tonnes capacity per truck \\u2022 \",utilizationPercent,\"% utilization\"]})]});})()]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:[\"Origin * \",aiValidating&&/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-500\",children:\"\\uD83E\\uDD16 AI Validating...\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"origin\",value:formData.origin,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",placeholder:\"Enter origin\",required:true,list:\"origin-suggestions\"}),/*#__PURE__*/_jsx(\"datalist\",{id:\"origin-suggestions\",children:commonLocations.map((location,index)=>/*#__PURE__*/_jsx(\"option\",{value:location},index))}),locationSuggestions.origin&&locationSuggestions.origin.valid&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-green-600\",children:[\"\\u2705 \",locationSuggestions.origin.corrected,locationSuggestions.origin.country&&\" (\".concat(locationSuggestions.origin.country,\")\"),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs\",children:[\"\\uD83D\\uDCCD \",locationSuggestions.origin.region,\" \\u2022 \",locationSuggestions.origin.type]})]}),locationSuggestions.origin&&!locationSuggestions.origin.valid&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-red-600\",children:[\"\\u274C \",locationSuggestions.origin.error]}),validationErrors.origin&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.origin})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:[\"Destination * \",aiValidating&&/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-500\",children:\"\\uD83E\\uDD16 AI Validating...\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"destination\",value:formData.destination,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",placeholder:\"Enter destination\",required:true,list:\"destination-suggestions\"}),/*#__PURE__*/_jsx(\"datalist\",{id:\"destination-suggestions\",children:commonLocations.map((location,index)=>/*#__PURE__*/_jsx(\"option\",{value:location},index))}),locationSuggestions.destination&&locationSuggestions.destination.valid&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-green-600\",children:[\"\\u2705 \",locationSuggestions.destination.corrected,locationSuggestions.destination.country&&\" (\".concat(locationSuggestions.destination.country,\")\"),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs\",children:[\"\\uD83D\\uDCCD \",locationSuggestions.destination.region,\" \\u2022 \",locationSuggestions.destination.type]})]}),locationSuggestions.destination&&!locationSuggestions.destination.valid&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-red-600\",children:[\"\\u274C \",locationSuggestions.destination.error]}),validationErrors.destination&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.destination})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:[\"Intermediate Hub (Optional) \",aiValidating&&/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-500\",children:\"\\uD83E\\uDD16 AI Validating...\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"intermediateHub\",value:formData.intermediateHub,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",placeholder:\"Enter intermediate hub (optional)\",list:\"hub-suggestions\"}),/*#__PURE__*/_jsx(\"datalist\",{id:\"hub-suggestions\",children:commonLocations.map((location,index)=>/*#__PURE__*/_jsx(\"option\",{value:location},index))}),locationSuggestions.intermediateHub&&locationSuggestions.intermediateHub.valid&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-green-600\",children:[\"\\u2705 \",locationSuggestions.intermediateHub.corrected,locationSuggestions.intermediateHub.country&&\" (\".concat(locationSuggestions.intermediateHub.country,\")\"),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs\",children:[\"\\uD83D\\uDCCD \",locationSuggestions.intermediateHub.region,\" \\u2022 \",locationSuggestions.intermediateHub.type]})]}),locationSuggestions.intermediateHub&&!locationSuggestions.intermediateHub.valid&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 text-sm text-red-600\",children:[\"\\u274C \",locationSuggestions.intermediateHub.error]}),validationErrors.intermediateHub&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:validationErrors.intermediateHub})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:[\"Transport Mode \",formData.intermediateHub&&formData.intermediateHub.trim()!==''?'(First Leg)':'']}),/*#__PURE__*/_jsx(\"select\",{name:\"transportMode1\",value:formData.transportMode1,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:transportModes.map(mode=>/*#__PURE__*/_jsx(\"option\",{value:mode.value,children:mode.label},mode.value))})]}),shouldShowSecondTransportMode()?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:[\"Transport Mode (Second Leg)\",formData.intermediateHub&&formData.intermediateHub.trim()!==''?' (To Final Destination)':' (Long Route)']}),/*#__PURE__*/_jsx(\"select\",{name:\"transportMode2\",value:formData.transportMode2,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:transportModes.map(mode=>/*#__PURE__*/_jsx(\"option\",{value:mode.value,children:mode.label},mode.value))}),!isShortRoute()&&(!formData.intermediateHub||formData.intermediateHub.trim()==='')&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-blue-600 mt-1\",children:\"\\uD83D\\uDCA1 Long route: Rail transport recommended via intermediate hub for optimal cost and safety.\"})]}):/*#__PURE__*//* FIXED: Show info for short routes */_jsx(\"div\",{className:\"bg-green-50 border border-green-200 rounded-md p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-green-400\",children:\"\\u2705\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-green-700 text-sm\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Short Domestic Route Detected:\"}),\" Single transport mode sufficient. No intermediate hub or second transport mode required for this \",((_locationSuggestions$=locationSuggestions.origin)===null||_locationSuggestions$===void 0?void 0:_locationSuggestions$.region)||'domestic',\" route.\"]})})]})}),routeInsights&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded-md p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-400\",children:\"\\uD83D\\uDCA1\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-2\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700 text-sm\",children:routeInsights})})]})}),validationErrors.transport&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 rounded-md p-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-red-700 text-sm\",children:validationErrors.transport})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-3 rounded-md mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded-md mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Optimization Preference\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"preference\",value:formData.preference,onChange:handleInputChange,className:\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"cost\",children:\"Lowest Cost\"}),/*#__PURE__*/_jsx(\"option\",{value:\"distance\",children:\"Shortest Distance\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4 mt-6\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleSubmit('options'),disabled:loading||currentApiStatus!=='connected'||Object.keys(validationErrors).length>0,className:\"calculate-with-ai-btn\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"button-text\",children:loading?'CALCULATING WITH AI ENHANCEMENT...':'CALCULATE WITH AI ENHANCEMENT'}),currentApiStatus==='connected'&&!loading&&/*#__PURE__*/_jsx(\"span\",{className:\"button-subtitle\",children:\"Multiple Route Options\"})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\",children:error})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:/*#__PURE__*/_jsxs(React.Fragment,{children:[result&&result.routeOptions&&Array.isArray(result.routeOptions)&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 text-blue-700\",children:[\"Route Options (\",result.routeOptions.length,\" found)\",result.aiEnhanced&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded\",children:\"\\uD83E\\uDD16 AI Enhanced\"}),result.aiRecommendation&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded\",children:\"\\u2728 AI Optimized\"})]}),result.processingInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-3 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-600\",children:\"\\uD83E\\uDD16\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800\",children:\"AI Enhancement Status\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm text-blue-700\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Dynamic Pricing:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1\",children:result.routeOptions.some(r=>r.aiEnhanced)?'✅ Active':'⚠️ Fallback'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Distance Calculation:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1\",children:\"\\u2705 AI-Enhanced\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Market Factors:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1\",children:result.routeOptions.some(r=>r.aiFactors&&!r.aiFactors.error)?'Real-time':'Static'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"AI-Enhanced Options:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-1\",children:[result.routeOptions.filter(r=>r.aiEnhanced).length,\"/\",result.routeOptions.length]})]})]})]}),result.searchQuery&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded mb-4 text-sm\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Search:\"}),\" \",result.searchQuery.from,\" \\u2192 \",result.searchQuery.to,\" |\",result.searchQuery.volume,\" tonnes \",result.searchQuery.fuelType]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:result.routeOptions.map((option,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-4 transition-all cursor-pointer \".concat(mapData.selectedRoute&&mapData.selectedRoute.id===option.id?'border-blue-500 bg-blue-50 shadow-md':index===0||option.recommended?'border-green-500 bg-green-50':option.aiEnhanced?'border-blue-500 bg-blue-50':'border-gray-200 hover:bg-gray-50 hover:border-blue-300'),onClick:()=>{// Add this click handler to route option cards\nconst mapRoute=mapData.routeVisualizations.find(r=>r.id===option.id||r.name===option.name);if(mapRoute){handleMapRouteSelect(mapRoute);}},children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2 flex-wrap\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-gray-900\",children:option.name||'Unknown Route'}),(index===0||option.recommended)&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded\",children:\"\\uD83C\\uDFAF RECOMMENDED\"}),option.aiEnhanced&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\",children:\"\\uD83E\\uDD16 AI ENHANCED\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded\",children:\"\\uD83D\\uDCB0 ALL-IN PRICE\"}),mapData.selectedRoute&&mapData.selectedRoute.id===option.id&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\",children:\"\\uD83D\\uDDFA\\uFE0F SELECTED ON MAP\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u23F1\\uFE0F Estimated Time: \",option.estimatedTime||'Unknown']}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uD83D\\uDCCD Distance: \",option.distance||'Unknown',\" miles\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u26A0\\uFE0F Risk Level: \",/*#__PURE__*/_jsx(\"span\",{className:\"capitalize \".concat(option.riskLevel==='low'?'text-green-600':option.riskLevel==='medium'?'text-yellow-600':'text-red-600'),children:option.riskLevel||'Unknown'})]}),option.costBreakdown&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded p-2 mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs font-medium text-gray-700 mb-1\",children:\"\\uD83D\\uDCB0 Cost Breakdown:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDE9B Transport & Logistics:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:formatCurrency(option.costBreakdown.transportCost||0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u26FD Fuel Purchase (\",formData.volume,\" tonnes):\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:formatCurrency(option.costBreakdown.commodityCost||0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between border-t pt-1 font-semibold\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCB0 Total Project Cost:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600\",children:formatCurrency(option.costBreakdown.totalCost||option.estimatedCost)})]})]})]}),option.description&&/*#__PURE__*/_jsxs(\"div\",{className:\"italic mt-2\",children:[\"\\uD83D\\uDCA1 \",option.description]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right ml-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mb-1\",children:\"TOTAL PROJECT COST\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:formatCurrency(option.estimatedCost||0)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:\"Transport + Fuel Included\"}),option.aiEnhanced&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-600 mb-1\",children:\"\\uD83E\\uDD16 AI Pricing\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>calculateDetailedCost(option),className:\"mt-2 text-sm bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 transition-colors\",children:\"Get Details\"})]})]})},option.id||index))})]}),(result===null||result===void 0?void 0:result.routeOptions)&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:/*#__PURE__*/_jsx(CostComparisonChart,{routes:result.routeOptions})}),result&&result.calculation&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 text-green-700\",children:[\"Detailed Cost Calculation\",result.aiEnhanced&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded\",children:\"\\uD83E\\uDD16 AI Enhanced\"})]}),result.selectedRoute&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-3 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800\",children:result.selectedRoute.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700 text-sm\",children:result.selectedRoute.description}),(result.selectedRoute.trucksNeeded||((_result$calculation=result.calculation)===null||_result$calculation===void 0?void 0:_result$calculation.trucksNeeded))&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-blue-700 text-sm\",children:[\"\\uD83D\\uDE9A \",formatTrucks(result.selectedRoute.trucksNeeded||result.calculation.trucksNeeded)]})]}),result&&result.calculation&&result.selectedRoute&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4 text-blue-700\",children:\"\\uD83D\\uDCCD Detailed Route Visualization\"}),/*#__PURE__*/_jsx(RouteMap,{routeOptions:[result.selectedRoute],selectedRoute:result.selectedRoute,origin:formData.origin,destination:formData.destination,onRouteSelect:()=>{},showAllRoutes:false,height:\"500px\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-green-600 text-center p-4 bg-green-50 rounded\",children:[\"Total Project Cost: \",formatCurrency(result.calculation.totalCost)]}),result.calculation.costSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded p-3 text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800 mb-1\",children:\"\\uD83D\\uDE9B Pure Transport\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-bold text-blue-600\",children:formatCurrency(result.calculation.costSummary.pureTransportCosts)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-600 mt-1\",children:\"Logistics & Delivery\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-orange-50 border border-orange-200 rounded p-3 text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-orange-800 mb-1\",children:\"\\u26FD Commodity\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-bold text-orange-600\",children:formatCurrency(result.calculation.costSummary.commodityCosts)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-orange-600 mt-1\",children:\"Fuel Purchase\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 border border-green-200 rounded p-3 text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-green-800 mb-1\",children:\"\\uD83D\\uDCB0 Total Project\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl font-bold text-green-600\",children:formatCurrency(result.calculation.costSummary.totalProjectCosts)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-green-600 mt-1\",children:\"Complete Solution\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3 text-blue-800\",children:\"\\uD83D\\uDE9B Transport & Logistics Breakdown:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Base Transport Cost:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:formatCurrency(result.calculation.baseCost)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Fuel Handling Fee:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costBreakdown.fuelHandlingFee)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Terminal Fees:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costBreakdown.terminalFees)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Hub Transfer Fee:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costBreakdown.hubTransferFee)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Insurance Cost:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costBreakdown.insuranceCost)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Carbon Offset:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costBreakdown.carbonOffset)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between border-t pt-2 font-bold text-blue-800\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Transport:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costSummary.pureTransportCosts)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-orange-50 border border-orange-200 rounded p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3 text-orange-800\",children:\"\\u26FD Commodity Purchase Breakdown:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Volume:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[formData.volume,\" tonnes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Market Price per Tonne:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",result.calculation.costBreakdown.commodityPricePerTonne,\"/tonne\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between border-t pt-2 font-bold text-orange-800\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Commodity Cost:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.calculation.costBreakdown.commodityCost)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 border border-gray-200 rounded p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3 text-gray-800\",children:\"\\uD83D\\uDCCA Cost per Unit Analysis:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Transport Cost per Tonne:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-lg font-bold text-blue-600\",children:[\"$\",(result.calculation.costSummary.pureTransportCosts/parseFloat(formData.volume)).toFixed(2),\"/tonne\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Total Cost per Tonne:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-lg font-bold text-green-600\",children:[\"$\",(result.calculation.totalCost/parseFloat(formData.volume)).toFixed(2),\"/tonne\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center text-sm text-gray-600 pt-4 border-t\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Confidence Score:\"}),\" \",result.calculation.confidence,\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Route ID: \",result.routeId,\" | Calculated: \",formatDate(result.timestamp)]})]})]})]}),result&&result.data&&!result.routeOptions&&!result.calculation&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 text-green-700\",children:[\"Cost Calculation Results\",((_result$data$aiInsigh=result.data.aiInsights)===null||_result$data$aiInsigh===void 0?void 0:_result$data$aiInsigh.aiUsed)&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded\",children:\"\\uD83E\\uDD16 AI Enhanced\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold text-green-600\",children:[\"Total Cost: \",formatCurrency(result.data.totalCost)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Base Cost:\"}),/*#__PURE__*/_jsx(\"br\",{}),formatCurrency(result.data.baseCost)]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Distance:\"}),/*#__PURE__*/_jsx(\"br\",{}),result.data.distance,\" miles\"]}),result.data.trucksNeeded&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trucks Needed:\"}),/*#__PURE__*/_jsx(\"br\",{}),formatTrucks(result.data.trucksNeeded)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-2\",children:\"Cost Breakdown:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Fuel Handling Fee:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.data.costBreakdown.fuelHandlingFee)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Terminal Fees:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.data.costBreakdown.terminalFees)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Hub Transfer Fee:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.data.costBreakdown.hubTransferFee)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Insurance Cost:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.data.costBreakdown.insuranceCost)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Carbon Offset:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(result.data.costBreakdown.carbonOffset)})]})]})]}),result.data.legs&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-2\",children:\"Route Details:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Leg 1: \",result.data.legs.leg1.distance,\" miles via \",result.data.legs.leg1.mode,\" - \",formatCurrency(result.data.legs.leg1.cost)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Leg 2: \",result.data.legs.leg2.distance,\" miles via \",result.data.legs.leg2.mode,\" - \",formatCurrency(result.data.legs.leg2.cost)]})]})]}),((_result$data$aiInsigh2=result.data.aiInsights)===null||_result$data$aiInsigh2===void 0?void 0:_result$data$aiInsigh2.recommendation)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-1 text-blue-800\",children:\"\\uD83E\\uDD16 AI Insights:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700 text-sm\",children:result.data.aiInsights.recommendation})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-4\",children:[\"Confidence: \",result.data.confidence,\"% | Calculated: \",formatDate(result.data.timestamp)]})]})]}),routeHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Recent Calculations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 max-h-64 overflow-y-auto\",children:routeHistory.slice(0,5).map(route=>/*#__PURE__*/_jsx(\"div\",{className:\"border-b pb-2 last:border-b-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[route.origin,\" \\u2192 \",route.destination]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-600\",children:[route.volume,\" tonnes \",route.fuelType]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold text-green-600\",children:formatCurrency(route.calculatedCost)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-xs\",children:formatDate(route.timestamp)})]})]})},route._id))})]})]})})]})]})});};export default FuelRouteApp;","map":{"version":3,"names":["React","useState","useEffect","RouteMap","CostComparisonChart","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","makeRequest","endpoint","options","arguments","length","undefined","url","concat","defaultOptions","headers","_objectSpread","response","fetch","ok","errorData","json","catch","Error","error","status","console","checkApiHealth","getFuelTypes","getRouteHistory","calculateRouteCost","routeData","method","body","JSON","stringify","getRouteVisualization","routeOptions","origin","destination","fuelType","getLocationsData","FuelRouteApp","_ref","_locationSuggestions$","_result$calculation","_result$data$aiInsigh","_result$data$aiInsigh2","backendAPI","apiStatus","formData","setFormData","volume","volumeUnit","intermediateHub","transportMode1","transportMode2","preference","result","setResult","loading","setLoading","setError","validationErrors","setValidationErrors","fuelTypes","setFuelTypes","routeHistory","setRouteHistory","localApiStatus","setLocalApiStatus","routeInsights","setRouteInsights","locationSuggestions","setLocationSuggestions","aiValidating","setAiValidating","mapData","setMapData","routeVisualizations","selectedRoute","showMap","locations","commonLocations","volumeUnits","value","label","factor","transportModes","suitable","initializeApp","isConnected","fuelTypesResponse","data","historyResponse","loadMapData","Array","isArray","log","mapResponse","success","visualizations","prev","handleMapRouteSelect","_result$routeOptions","id","matchingRouteOption","find","route","name","calculateDetailedCost","validateRoute","validateLocationBasic","location","fieldName","isValid","some","validLocation","toLowerCase","includes","suggestions","matchedLocation","valid","corrected","newErrors","generateLocationInsights","transportMode","_result$transportMode","_result$transportMode2","_result$transportMode3","insights","push","infrastructure","fuelRequirements","reqs","requirements","warnings","map","w","setLocationBasicValidation","region","type","state","locationLower","errors","originInfo","destInfo","routeType","parseFloat","_volumeUnits$find","volumeInTonnes","u","_volumeUnits$find2","transport","handleInputChange","e","target","isShortRoute","dest","californiaRoutes","isCaliforniaRoute","_ref2","city1","city2","northeastRoutes","isNortheastRoute","_ref3","southeastRoutes","isSoutheastRoute","_ref4","gulfRoutes","isGulfRoute","_ref5","pacificNorthwestRoutes","isPacificNorthwestRoute","_ref6","midwestRoutes","isMidwestRoute","_ref7","midAtlanticRoutes","isMidAtlanticRoute","_ref8","isDomestic","country","originRegion","destRegion","originCountry","destCountry","usStates","usCities","originUS","city","destUS","shouldShowSecondTransportMode","hasIntermediateHub","trim","isShort","shouldShow","handleSubmit","mode","_volumeUnits$find3","loc","Object","assign","keys","requestData","requestType","calculateCost","refreshHistory","message","selectedRouteOption","_volumeUnits$find4","estimatedCost","detailedResponse","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleString","formatTrucks","count","currentApiStatus","ApiStatusIndicator","className","children","animationDelay","animationDuration","onChange","required","charAt","toUpperCase","slice","min","step","placeholder","unit","_volumeUnits$find5","truckCapacities","hydrogen","methanol","ammonia","gasoline","diesel","ethanol","maxCapacity","trucksNeeded","Math","max","ceil","utilizationPercent","round","toFixed","list","index","onClick","disabled","Fragment","aiEnhanced","aiRecommendation","processingInfo","r","aiFactors","filter","searchQuery","from","to","option","recommended","mapRoute","estimatedTime","distance","riskLevel","costBreakdown","transportCost","commodityCost","totalCost","description","routes","calculation","onRouteSelect","showAllRoutes","height","costSummary","pureTransportCosts","commodityCosts","totalProjectCosts","baseCost","fuelHandlingFee","terminalFees","hubTransferFee","insuranceCost","carbonOffset","commodityPricePerTonne","confidence","routeId","timestamp","aiInsights","aiUsed","legs","leg1","cost","leg2","recommendation","calculatedCost","_id"],"sources":["/Users/saloniangre/Downloads/Fuelroute/FinalFRP/frontend/src/components/FuelRouteApp.js"],"sourcesContent":["//frontend/src/components/FuelRouteApp.js - ERROR FIXES ONLY\nimport React, { useState, useEffect } from 'react';\nimport RouteMap from './RouteMap';\nimport CostComparisonChart from './CostComparisonChart';\nimport './RouteMap.css';\n\n// API Service - inlined to avoid external imports\nconst API_BASE_URL = 'http://localhost:5001/api';\n\nconst makeRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  \n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n  };\n\n  try {\n    const response = await fetch(url, { ...defaultOptions, ...options });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n};\n\n// API functions\nconst checkApiHealth = () => makeRequest('/health');\nconst getFuelTypes = () => makeRequest('/fuel-types');\nconst getRouteHistory = () => makeRequest('/routes');\nconst calculateRouteCost = (routeData) => makeRequest('/calculate-cost', {\n  method: 'POST',\n  body: JSON.stringify(routeData),\n});\n\n// Add these new API functions after your existing API functions\nconst getRouteVisualization = (routeOptions, routeData) => \n  makeRequest('/routing/visualization', {\n    method: 'POST',\n    body: JSON.stringify({ \n      routeOptions, \n      origin: routeData.origin, \n      destination: routeData.destination,\n      fuelType: routeData.fuelType \n    }),\n  });\n\nconst getLocationsData = () => makeRequest('/routing/locations');\n\nconst FuelRouteApp = ({ backendAPI, apiStatus }) => {\n  // Form state\n  const [formData, setFormData] = useState({\n    fuelType: 'hydrogen',\n    volume: '',\n    volumeUnit: 'tonnes',\n    origin: '',\n    destination: '',\n    intermediateHub: '',\n    transportMode1: 'truck',\n    transportMode2: 'truck',\n    preference: 'cost',\n  });\n\n  // App state\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [validationErrors, setValidationErrors] = useState({});\n  const [fuelTypes, setFuelTypes] = useState(['hydrogen', 'methanol', 'ammonia']);\n  const [routeHistory, setRouteHistory] = useState([]);\n  const [localApiStatus, setLocalApiStatus] = useState('checking');\n  const [routeInsights, setRouteInsights] = useState('');\n  const [locationSuggestions, setLocationSuggestions] = useState({});\n  const [aiValidating, setAiValidating] = useState(false);\n  const [mapData, setMapData] = useState({\n    routeVisualizations: [],\n    selectedRoute: null,\n    showMap: false,\n    locations: []\n  });\n\n  // AI-powered location suggestions (common locations for quick selection)\n  // 1. UPDATE: Replace your existing commonLocations array (around line 40-80)\n  const commonLocations = [\n    // Gulf Coast Ports\n    'Houston, TX',\n    'New Orleans, LA',\n    'Mobile, AL',\n    'Tampa Bay, FL',\n    \n    // Southeast Atlantic Ports  \n    'Savannah, GA',\n    'Jacksonville, FL',\n    'Miami, FL',\n    \n    // Northeast Corridor Ports\n    'New York/NJ',\n    'Philadelphia, PA',\n    'Norfolk, VA',\n    'Boston, MA',\n    \n    // West Coast Ports\n    'Long Beach, CA',\n    'Los Angeles, CA',\n    'Seattle, WA',\n    'Portland, OR',\n    'San Francisco/Oakland, CA',\n    \n    // Inland Transportation Hubs\n    'Chicago, IL',\n    'St. Louis, MO',\n    'Memphis, TN',\n    'Duluth-Superior, MN/WI'\n  ];\n\n  const volumeUnits = [\n    { value: 'tonnes', label: 'Tonnes (metric tons)', factor: 1 },\n    { value: 'kg', label: 'Kilograms', factor: 0.001 },\n    { value: 'liters', label: 'Liters', factor: 0.001 }, // Approximate for liquid fuels\n    { value: 'gallons', label: 'Gallons (US)', factor: 0.00378 }\n  ];\n\n  const transportModes = [\n    { value: 'truck', label: 'Truck', suitable: ['local', 'regional'] },\n    { value: 'rail', label: 'Rail', suitable: ['regional', 'continental'] }\n  ];\n\n  // Check API health on component mount\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        if (backendAPI && backendAPI.isConnected) {\n          setLocalApiStatus('connected');\n          setFuelTypes(backendAPI.fuelTypes || ['hydrogen', 'methanol', 'ammonia']);\n          setRouteHistory(backendAPI.routeHistory || []);\n        } else {\n          await checkApiHealth();\n          setLocalApiStatus('connected');\n\n          const fuelTypesResponse = await getFuelTypes();\n          setFuelTypes(fuelTypesResponse.data || ['hydrogen', 'methanol', 'ammonia']);\n\n          const historyResponse = await getRouteHistory();\n          setRouteHistory(historyResponse.data || []);\n        }\n      } catch (error) {\n        console.error('Failed to initialize app:', error);\n        setLocalApiStatus('error');\n        setError('Unable to connect to backend server. Make sure it\\'s running on port 5001.');\n        // Ensure fuel types are always available even if API fails\n        setFuelTypes(['hydrogen', 'methanol', 'ammonia']);\n      }\n    };\n\n    initializeApp();\n  }, [backendAPI]);\n\n  // Add this new useEffect after your existing useEffect hooks (around line 80)\nuseEffect(() => {\n  const loadMapData = async () => {\n    if (result && result.routeOptions && Array.isArray(result.routeOptions) && result.routeOptions.length > 0) {\n      try {\n        console.log('🗺️ Loading route visualization data...');\n        \n        const mapResponse = await getRouteVisualization(result.routeOptions, formData);\n        \n        if (mapResponse.success && mapResponse.visualizations) {\n          setMapData(prev => ({\n            ...prev,\n            routeVisualizations: mapResponse.visualizations,\n            showMap: true,\n            selectedRoute: mapResponse.visualizations[0] || null\n          }));\n          console.log('✅ Map data loaded:', mapResponse.visualizations.length, 'routes');\n        }\n      } catch (error) {\n        console.error('❌ Failed to load map data:', error);\n        // Map is optional - don't show error to user\n      }\n    } else {\n      setMapData(prev => ({ ...prev, showMap: false, routeVisualizations: [] }));\n    }\n  };\n\n  loadMapData();\n}, [result, formData.origin, formData.destination, formData.fuelType]);\n\n// Add this function after your existing helper functions (around line 200)\nconst handleMapRouteSelect = (selectedRoute) => {\n  console.log('🗺️ Map route selected:', selectedRoute.id);\n  setMapData(prev => ({ ...prev, selectedRoute }));\n  \n  // Find matching route option and trigger detailed calculation\n  const matchingRouteOption = result.routeOptions?.find(route => \n    route.id === selectedRoute.id || route.name === selectedRoute.name\n  );\n  \n  if (matchingRouteOption) {\n    calculateDetailedCost(matchingRouteOption);\n  }\n};\n  // Route validation and insights\n  useEffect(() => {\n    if (formData.origin && formData.destination) {\n      validateRoute();\n    }\n  }, [formData.origin, formData.destination, formData.intermediateHub, formData.volume, formData.volumeUnit, locationSuggestions]);\n\n  // REPLACE with this simple validation:\nconst validateLocationBasic = (location, fieldName) => {\n  const isValid = commonLocations.some(validLocation => \n    validLocation.toLowerCase().includes(location.toLowerCase()) ||\n    location.toLowerCase().includes(validLocation.toLowerCase())\n  );\n  \n  const suggestions = { ...locationSuggestions };\n  \n  if (isValid) {\n    const matchedLocation = commonLocations.find(validLocation => \n      validLocation.toLowerCase().includes(location.toLowerCase()) ||\n      location.toLowerCase().includes(validLocation.toLowerCase())\n    );\n    \n    suggestions[fieldName] = {\n      valid: true,\n      corrected: matchedLocation || location\n    };\n    \n    setValidationErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[fieldName];\n      return newErrors;\n    });\n  } else {\n    suggestions[fieldName] = {\n      valid: false,\n      error: 'Please select from the 20 major US ports/hubs'\n    };\n  }\n  \n  setLocationSuggestions(suggestions);\n};\n  \n  // ✅ NEW: Generate location insights based on validation results\n  const generateLocationInsights = (result, transportMode, fuelType) => {\n    const insights = [];\n    \n    // Transport mode insights\n    if (!result.transportMode?.suitable) {\n      insights.push(`⚠️ ${transportMode} transport may not be available at this location`);\n    } else if (result.transportMode.infrastructure === 'major_port') {\n      insights.push('Major port facility');\n    } else if (result.transportMode.infrastructure === 'major_rail_hub') {\n      insights.push(`🚂 Major rail hub - excellent for rail transport`);\n    }\n    \n    // Fuel-specific insights\n    if (result.fuelRequirements) {\n      const reqs = result.fuelRequirements.requirements;\n      if (fuelType === 'hydrogen') {\n        insights.push('❄️ Cryogenic facilities required for hydrogen');\n      } else if (fuelType === 'ammonia') {\n        insights.push(`🧊 Refrigerated storage required for ammonia`);\n      }\n    }\n    \n    // Warnings\n    if (result.transportMode?.warnings?.length > 0) {\n      insights.push(...result.transportMode.warnings.map(w => `⚠️ ${w}`));\n    }\n    \n    return insights;\n  };\n\n  const setLocationBasicValidation = (location, fieldName) => {\n    // Enhanced fallback validation for the 20 US port/hub locations\n    const isValid = commonLocations.some(validLocation => \n      validLocation.toLowerCase().includes(location.toLowerCase()) ||\n      location.toLowerCase().includes(validLocation.toLowerCase())\n    );\n    \n    const suggestions = { ...locationSuggestions };\n    \n    if (isValid) {\n      // Find the matching location from our list\n      const matchedLocation = commonLocations.find(validLocation => \n        validLocation.toLowerCase().includes(location.toLowerCase()) ||\n        location.toLowerCase().includes(validLocation.toLowerCase())\n      );\n      \n      let region = 'Unknown';\n      let type = 'port';\n      let state = '';\n      \n      // Determine region based on location\n      const locationLower = location.toLowerCase();\n      if (locationLower.includes('houston') || locationLower.includes('new orleans') || \n          locationLower.includes('mobile') || locationLower.includes('tampa')) {\n        region = 'Gulf Coast';\n      } else if (locationLower.includes('savannah') || locationLower.includes('jacksonville') || \n                 locationLower.includes('miami')) {\n        region = 'Southeast';\n      } else if (locationLower.includes('new york') || locationLower.includes('philadelphia') || \n                 locationLower.includes('norfolk') || locationLower.includes('boston')) {\n        region = 'Northeast';\n      } else if (locationLower.includes('long beach') || locationLower.includes('los angeles') || \n                 locationLower.includes('seattle') || locationLower.includes('portland') || \n                 locationLower.includes('san francisco') || locationLower.includes('oakland')) {\n        region = 'West Coast';\n      } else if (locationLower.includes('chicago') || locationLower.includes('st. louis') || \n                 locationLower.includes('memphis') || locationLower.includes('duluth')) {\n        region = 'Inland';\n      }\n      \n      // Extract state\n      if (locationLower.includes('tx')) state = 'TX';\n      else if (locationLower.includes('la')) state = 'LA';\n      else if (locationLower.includes('al')) state = 'AL';\n      else if (locationLower.includes('fl')) state = 'FL';\n      else if (locationLower.includes('ga')) state = 'GA';\n      else if (locationLower.includes('ny')) state = 'NY';\n      else if (locationLower.includes('nj')) state = 'NJ';\n      else if (locationLower.includes('pa')) state = 'PA';\n      else if (locationLower.includes('va')) state = 'VA';\n      else if (locationLower.includes('ma')) state = 'MA';\n      else if (locationLower.includes('ca')) state = 'CA';\n      else if (locationLower.includes('wa')) state = 'WA';\n      else if (locationLower.includes('or')) state = 'OR';\n      else if (locationLower.includes('il')) state = 'IL';\n      else if (locationLower.includes('mo')) state = 'MO';\n      else if (locationLower.includes('tn')) state = 'TN';\n      else if (locationLower.includes('mn')) state = 'MN';\n      else if (locationLower.includes('wi')) state = 'WI';\n      \n      // Determine type\n      if (locationLower.includes('chicago') || locationLower.includes('st. louis') || \n          locationLower.includes('memphis') || locationLower.includes('duluth')) {\n        type = 'hub';\n      }\n      \n      suggestions[fieldName] = {\n        valid: true,\n        corrected: matchedLocation || location,\n        region: region,\n        type: type,\n        state: state\n      };\n      \n      // Clear validation errors for this field when location is valid\n      setValidationErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[fieldName];\n        return newErrors;\n      });\n    } else {\n      suggestions[fieldName] = {\n        valid: false,\n        error: 'Please select a location from the list of 20 major US ports/hubs'\n      };\n    }\n    \n    setLocationSuggestions(suggestions);\n  };\n\n  const validateRoute = () => {\n    const errors = {};\n    let insights = '';\n    \n    if (formData.origin && formData.destination) {\n      // Check if origin and destination are the same\n      if (formData.origin.toLowerCase() === formData.destination.toLowerCase()) {\n        errors.destination = 'Destination cannot be the same as origin';\n      }\n      \n      const originInfo = locationSuggestions.origin;\n      const destInfo = locationSuggestions.destination;\n      \n      // AI-enhanced route type calculation\n      let routeType = 'unknown';\n      if (originInfo && destInfo && originInfo.valid && destInfo.valid) {\n        if (originInfo.region === destInfo.region) {\n          routeType = 'regional';\n        } else if (originInfo.region !== destInfo.region) {\n          routeType = 'long';\n        }\n        \n        // Enhanced insights based on AI analysis\n        const volume = parseFloat(formData.volume);\n        const volumeUnit = formData.volumeUnit;\n        \n        if (volume > 0) {\n          const volumeInTonnes = volume * (volumeUnits.find(u => u.value === volumeUnit)?.factor || 1);\n          \n          if (routeType === 'regional' && volumeInTonnes <= 5) {\n            insights = `🚛 Short distance within ${originInfo.region}: Truck transport recommended for cost efficiency.`;\n          } else if (volumeInTonnes > 10) {\n            insights = `🚢 For 10+ tonnes: Rail transport recommended for cost efficiency and environmental benefits. Large volumes benefit from bulk transport modes with lower per-unit costs.`;\n          } else if (routeType === 'long') {\n            insights = `Long route (${originInfo.region} → ${destInfo.region}): Rail transport recommended via intermediate hub for optimal cost and safety.`;\n          } else if (volumeInTonnes > 15) {\n            insights = `🚆 Large volume transport: Consider rail for cost efficiency.`;\n          }\n          \n          // Add fuel-specific insights\n          if (formData.fuelType === 'hydrogen') {\n            insights += ' Hydrogen requires specialized cryogenic handling protocols.';\n          } else if (formData.fuelType === 'ammonia') {\n            insights += ' Ammonia transport requires specialized safety and ventilation systems.';\n          }\n        }\n      } else {\n        // Fallback to basic validation for non-AI validated locations\n        const volume = parseFloat(formData.volume);\n        const volumeUnit = formData.volumeUnit;\n        \n        if (volume > 0) {\n          const volumeInTonnes = volume * (volumeUnits.find(u => u.value === volumeUnit)?.factor || 1);\n          \n          if (volumeInTonnes <= 5) {\n            insights = 'Small volume: Truck transport typically most cost-effective for shorter distances.';\n          } else if (volumeInTonnes > 10) {\n            insights = 'For 10+ tonnes: Rail transport recommended for cost efficiency and environmental benefits.';\n          }\n        }\n      }\n      \n      // Validate transport modes with AI insights\n      if (routeType === 'long' && formData.transportMode1 === 'truck' && !formData.intermediateHub) {\n        errors.transport = 'Long truck transport requires an intermediate hub or consider rail transport for cross-continental delivery';\n      }\n    }\n    \n    setValidationErrors(errors);\n    setRouteInsights(insights);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear specific validation errors when user starts fixing them\n    if (validationErrors[name]) {\n      setValidationErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n    \n    if (['origin', 'destination', 'intermediateHub'].includes(name) && value.length > 2) {\n      validateLocationBasic(value, name);\n    }\n  };\n\n  // FIXED: Enhanced isShortRoute function with improved California detection\n  // REPLACE the isShortRoute() function in FuelRouteApp.js with this enhanced version\n\n  const isShortRoute = () => {\n    if (!formData.origin || !formData.destination) return false;\n  \n    const origin = formData.origin.toLowerCase();\n    const dest = formData.destination.toLowerCase();\n  \n    console.log('🔍 Route check:', { origin, dest });\n  \n  // **PRIORITY 1: California Routes (Same State - Most Common)**\n    const californiaRoutes = [\n      ['los angeles', 'long beach'],        // ~20 miles - VERY SHORT\n      ['los angeles', 'san francisco'],     // ~380 miles\n      ['los angeles', 'oakland'],           // ~380 miles  \n      ['long beach', 'san francisco'],      // ~400 miles\n      ['long beach', 'oakland'],            // ~400 miles\n      ['san francisco', 'oakland'],         // ~15 miles - VERY SHORT\n    ];\n  \n    const isCaliforniaRoute = californiaRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isCaliforniaRoute) {\n      console.log('✅ California short route detected');\n      return true;\n    }\n  \n  // **PRIORITY 2: Northeast Corridor (Very Close)**\n    const northeastRoutes = [\n      ['new york', 'philadelphia'],        // ~95 miles\n      ['new york', 'boston'],              // ~215 miles\n      ['philadelphia', 'boston'],          // ~300 miles\n    ];\n  \n    const isNortheastRoute = northeastRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isNortheastRoute) {\n      console.log('✅ Northeast corridor short route detected');\n      return true;\n    }\n  \n  // **PRIORITY 3: Southeast Coast (Regional)**\n    const southeastRoutes = [\n      ['tampa', 'miami'],                   // ~280 miles\n      ['jacksonville', 'miami'],           // ~350 miles\n      ['savannah', 'jacksonville'],        // ~140 miles\n      ['tampa', 'jacksonville'],           // ~200 miles\n    ];\n  \n    const isSoutheastRoute = southeastRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isSoutheastRoute) {\n      console.log('✅ Southeast regional short route detected');\n      return true;\n    }\n  \n  // **PRIORITY 4: Gulf Coast (Regional)**\n    const gulfRoutes = [\n      ['houston', 'new orleans'],          // ~350 miles\n      ['new orleans', 'mobile'],           // ~150 miles\n      ['houston', 'mobile'],               // ~350 miles\n    ];\n  \n    const isGulfRoute = gulfRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isGulfRoute) {\n      console.log('✅ Gulf coast short route detected');\n      return true;\n    }\n  \n  // **PRIORITY 5: Pacific Northwest (Regional)**\n    const pacificNorthwestRoutes = [\n      ['seattle', 'portland'],             // ~170 miles\n    ];\n  \n    const isPacificNorthwestRoute = pacificNorthwestRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isPacificNorthwestRoute) {\n      console.log('✅ Pacific Northwest short route detected');\n      return true;\n    }\n  \n  // **PRIORITY 6: Midwest/Great Lakes (Regional)**\n    const midwestRoutes = [\n      ['chicago', 'st. louis'],            // ~300 miles\n      ['chicago', 'memphis'],              // ~530 miles\n      ['memphis', 'st. louis'],            // ~300 miles\n      ['chicago', 'duluth'],               // ~350 miles\n      ['chicago', 'superior'],             // ~350 miles\n    ];\n  \n    const isMidwestRoute = midwestRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isMidwestRoute) {\n      console.log('✅ Midwest regional short route detected');\n      return true;\n    }\n  \n  // **PRIORITY 7: Mid-Atlantic (Regional)**\n    const midAtlanticRoutes = [\n      ['norfolk', 'philadelphia'],         // ~300 miles\n      ['norfolk', 'new york'],             // ~350 miles\n    ];\n  \n    const isMidAtlanticRoute = midAtlanticRoutes.some(([city1, city2]) => \n      (origin.includes(city1) && dest.includes(city2)) ||\n      (origin.includes(city2) && dest.includes(city1))\n    );\n  \n    if (isMidAtlanticRoute) {\n      console.log('✅ Mid-Atlantic short route detected');\n      return true;\n    }\n  \n  // **FALLBACK: Check AI validation if available**\n    const originInfo = locationSuggestions.origin;\n    const destInfo = locationSuggestions.destination;\n  \n    if (originInfo && destInfo && originInfo.valid && destInfo.valid) {\n      const isDomestic = originInfo.region === destInfo.region && \n                        originInfo.country === destInfo.country;\n    \n      console.log('🤖 AI route check:', { \n        originRegion: originInfo.region, \n        destRegion: destInfo.region,\n        originCountry: originInfo.country,\n        destCountry: destInfo.country,\n        isDomestic \n      });\n    \n      return isDomestic;\n    }\n  \n  // **FINAL FALLBACK: General US domestic detection**\n    const usStates = ['ca', 'california', 'wa', 'washington', 'ny', 'new york', 'texas', 'tx', \n                    'florida', 'fl', 'illinois', 'il', 'oregon', 'or', 'massachusetts', 'ma',\n                    'pennsylvania', 'pa', 'virginia', 'va', 'georgia', 'ga', 'louisiana', 'la',\n                    'alabama', 'al', 'missouri', 'mo', 'tennessee', 'tn', 'minnesota', 'mn', \n                    'wisconsin', 'wi'];\n  \n    const usCities = ['los angeles', 'san francisco', 'oakland', 'seattle', 'houston', 'chicago',\n                    'new york', 'miami', 'boston', 'philadelphia', 'long beach', 'portland',\n                    'memphis', 'st. louis', 'norfolk', 'savannah', 'tampa', 'mobile', 'duluth'];\n  \n    const originUS = usStates.some(state => origin.includes(state)) || \n                    usCities.some(city => origin.includes(city)) ||\n                    origin.includes('usa') || origin.includes('united states');\n                   \n    const destUS = usStates.some(state => dest.includes(state)) || \n                  usCities.some(city => dest.includes(city)) ||\n                  dest.includes('usa') || dest.includes('united states');\n  \n    if (originUS && destUS) {\n      console.log('✅ General Short route detected');\n      return true;\n    }\n  \n    console.log('❌ Long route detected');\n    return false;\n  };\n\n  // FIXED: Function to determine if second transport mode should be shown\n  const shouldShowSecondTransportMode = () => {\n    const hasIntermediateHub = formData.intermediateHub && formData.intermediateHub.trim() !== '';\n    const isShort = isShortRoute();\n    \n    console.log('🚦 Transport mode check:', { hasIntermediateHub, isShort });\n    \n    // Show second transport mode ONLY if:\n    // 1. There's an actual intermediate hub provided, OR\n    // 2. It's NOT a short route (meaning it's long route) AND no intermediate hub\n    const shouldShow = hasIntermediateHub || (!isShort && !hasIntermediateHub);\n    \n    console.log('🚦 Should show second transport mode:', shouldShow);\n    return shouldShow;\n  };\n\n  // Updated handleSubmit with proper validation\n  const handleSubmit = async (mode = 'options') => {\n    setLoading(true);\n    setError('');\n    setResult(null);\n\n    try {\n      // Validate required fields\n      const errors = {};\n      \n      if (!formData.fuelType) errors.fuelType = 'Please select a fuel type';\n      if (!formData.volume) errors.volume = 'Please enter volume';\n      if (!formData.origin) errors.origin = 'Please enter origin';\n      if (!formData.destination) errors.destination = 'Please enter destination';\n      \n      // Validate locations - check if they are in the common locations list\n      if (formData.origin && !commonLocations.some(loc => \n        loc.toLowerCase() === formData.origin.toLowerCase() ||\n        loc.toLowerCase().includes(formData.origin.toLowerCase()) ||\n        formData.origin.toLowerCase().includes(loc.toLowerCase())\n      )) {\n        // Only set error if AI validation also failed\n        if (locationSuggestions.origin && locationSuggestions.origin.valid === false) {\n          errors.origin = 'Please enter a valid origin location';\n        }\n      }\n      \n      if (formData.destination && !commonLocations.some(loc => \n        loc.toLowerCase() === formData.destination.toLowerCase() ||\n        loc.toLowerCase().includes(formData.destination.toLowerCase()) ||\n        formData.destination.toLowerCase().includes(loc.toLowerCase())\n      )) {\n        // Only set error if AI validation also failed\n        if (locationSuggestions.destination && locationSuggestions.destination.valid === false) {\n          errors.destination = 'Please enter a valid destination location';\n        }\n      }\n      \n      // Only validate intermediate hub if it's actually provided\n      if (formData.intermediateHub && formData.intermediateHub.trim() !== '') {\n        if (!commonLocations.some(loc => \n          loc.toLowerCase() === formData.intermediateHub.toLowerCase() ||\n          loc.toLowerCase().includes(formData.intermediateHub.toLowerCase()) ||\n          formData.intermediateHub.toLowerCase().includes(loc.toLowerCase())\n        )) {\n          // Only set error if AI validation also failed\n          if (locationSuggestions.intermediateHub && locationSuggestions.intermediateHub.valid === false) {\n            errors.intermediateHub = 'Please enter a valid intermediate hub location';\n          }\n        }\n      }\n      \n      // Add existing validation errors (only if they exist)\n      Object.assign(errors, validationErrors);\n      \n      if (Object.keys(errors).length > 0) {\n        setValidationErrors(errors);\n        throw new Error('Please fix the validation errors above');\n      }\n\n      // Convert volume to tonnes for API\n      const volumeInTonnes = parseFloat(formData.volume) * (volumeUnits.find(u => u.value === formData.volumeUnit)?.factor || 1);\n\n      // Prepare data for API\n      const requestData = {\n        ...formData,\n        volume: volumeInTonnes, // Always send in tonnes to backend\n        volumeUnit: 'tonnes', // Backend expects tonnes\n        requestType: mode, // 'options' for multiple routes, 'single' for best recommendation\n        preference: formData.preference\n      };\n\n      console.log(`Sending ${mode} request:`, requestData);\n\n      if (backendAPI && backendAPI.isConnected && apiStatus === 'connected') {\n        console.log(`🤖 Using backend AI calculation (${mode} mode)...`);\n        const response = await backendAPI.calculateCost(requestData);\n        \n        console.log('Received response:', response);\n        setResult(response);\n\n        if (backendAPI.refreshHistory) {\n          await backendAPI.refreshHistory();\n        }\n      } else {\n        console.log(`🔧 Using direct API call (${mode} mode)...`);\n        const response = await calculateRouteCost(requestData);\n        \n        console.log('Received response:', response);\n        setResult(response);\n\n        const historyResponse = await getRouteHistory();\n        setRouteHistory(historyResponse.data || []);\n      }\n\n    } catch (error) {\n      setError(error.message);\n      console.error('Calculation failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ FIXED: calculateDetailedCost function with proper debugging and variable declaration\n  const calculateDetailedCost = async (selectedRouteOption) => {\n    setLoading(true);\n    setError('');\n\n    try {\n      console.log('🔍 FRONTEND DEBUG - Selected route option:');\n      console.log('   - ID:', selectedRouteOption.id);\n      console.log('   - Name:', selectedRouteOption.name);\n      console.log('   - Transport modes:', selectedRouteOption.transportModes);\n      console.log('   - Estimated cost:', selectedRouteOption.estimatedCost);\n      console.log('🎯 Getting detailed cost for route:', selectedRouteOption.id);\n\n      // Convert volume to tonnes for API\n      const volumeInTonnes = parseFloat(formData.volume) * (volumeUnits.find(u => u.value === formData.volumeUnit)?.factor || 1);\n\n      // Prepare data for detailed calculation\n      const requestData = {\n        ...formData,\n        volume: volumeInTonnes,\n        volumeUnit: 'tonnes',\n        requestType: 'single', // This tells backend to return detailed calculation\n        selectedRoute: selectedRouteOption,\n        preference: formData.preference\n      };\n\n      console.log('Requesting detailed calculation:', requestData);\n\n      // ✅ FIXED: Properly declare detailedResponse variable\n      let detailedResponse;\n      if (backendAPI && backendAPI.isConnected && apiStatus === 'connected') {\n        console.log('🤖 Using backend API for detailed calculation...');\n        detailedResponse = await backendAPI.calculateCost(requestData);\n      } else {\n        console.log('🔧 Using direct API call for detailed calculation...');\n        detailedResponse = await calculateRouteCost(requestData);\n      }\n\n      console.log('Detailed calculation response:', detailedResponse);\n\n      // Update result to show detailed calculation\n      setResult(detailedResponse);\n\n      // Refresh history\n      if (backendAPI && backendAPI.refreshHistory) {\n        await backendAPI.refreshHistory();\n      } else {\n        const historyResponse = await getRouteHistory();\n        setRouteHistory(historyResponse.data || []);\n      }\n\n    } catch (error) {\n      setError(`Failed to get detailed calculation: ${error.message}`);\n      console.error('Detailed calculation failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  const formatTrucks = (count) => {\n    if (!count) return '';\n    return count === 1 ? '1 truck' : `${count} trucks`;\n  };\n\n  const currentApiStatus = apiStatus || localApiStatus;\n\n  // API Status indicator with AI enhancement\n  const ApiStatusIndicator = () => (\n    <div className={`flex items-center gap-2 mb-4 p-2 rounded ${\n      currentApiStatus === 'connected' ? 'bg-green-100 text-green-800' :\n      currentApiStatus === 'error' ? 'bg-red-100 text-red-800' :\n      'bg-yellow-100 text-yellow-800'\n    }`}>\n      <div className={`w-2 h-2 rounded-full ${\n        currentApiStatus === 'connected' ? 'bg-green-500' :\n        currentApiStatus === 'error' ? 'bg-red-500' :\n        'bg-yellow-500'\n      }`}></div>\n      <span className=\"text-sm font-medium\">\n        {currentApiStatus === 'connected' ? 'Backend Connected (AI Enhanced) - 20 US Ports/Hubs' :\n        currentApiStatus === 'error' ? 'Backend Disconnected' :\n        'Checking Connection...'}\n      </span>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">\n          FuelRoute Pro Cost Calculator\n        </h1>\n        \n        <ApiStatusIndicator />\n\n        <div className=\"space-y-8\">\n          {/* Form Section */}\n          <div className=\"flex justify-center items-start px-4\"></div>\n          <div className=\"bg-white rounded-lg shadow-md p-6 max-w-xl mx-auto relative overflow-hidden\">\n            {/* Floating Background Circles */}\n            <div className=\"absolute inset-0 pointer-events-none\">\n              <div className=\"absolute top-4 left-8 w-12 h-12 bg-blue-100 rounded-full opacity-30 animate-bounce\" style={{animationDelay: '0s', animationDuration: '3s'}}></div>\n              <div className=\"absolute top-16 right-12 w-8 h-8 bg-green-100 rounded-full opacity-40 animate-pulse\" style={{animationDelay: '1s', animationDuration: '2s'}}></div>\n              <div className=\"absolute bottom-20 left-16 w-6 h-6 bg-purple-100 rounded-full opacity-35 animate-bounce\" style={{animationDelay: '2s', animationDuration: '4s'}}></div>\n              <div className=\"absolute bottom-8 right-8 w-10 h-10 bg-indigo-100 rounded-full opacity-25 animate-pulse\" style={{animationDelay: '0.5s', animationDuration: '3.5s'}}></div>\n              <div className=\"absolute top-32 left-4 w-4 h-4 bg-teal-100 rounded-full opacity-45 animate-bounce\" style={{animationDelay: '1.5s', animationDuration: '2.5s'}}></div>\n              <div className=\"absolute bottom-32 right-20 w-14 h-14 bg-cyan-100 rounded-full opacity-20 animate-pulse\" style={{animationDelay: '3s', animationDuration: '4s'}}></div>\n            </div>\n            \n          <h2 className=\"text-xl font-semibold mb-4 relative z-10\">Calculate Transport Cost - US Ports & Hubs</h2>\n            \n            <div className=\"space-y-6\">\n              {/* Fuel Type */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Fuel Type *\n                </label>\n                <select\n                  name=\"fuelType\"\n                  value={formData.fuelType}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                >\n                  {console.log('🔍 Fuel Types:', fuelTypes)}\n                  {fuelTypes.map(type => (\n                    <option key={type} value={type}>\n                      {type.charAt(0).toUpperCase() + type.slice(1)}\n                    </option>\n                  ))}\n                </select>\n                {validationErrors.fuelType && (\n                  <p className=\"text-red-500 text-sm mt-1\">{validationErrors.fuelType}</p>\n                )}\n              </div>\n\n              {/* Volume and Unit */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Volume *\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"volume\"\n                    value={formData.volume}\n                    onChange={handleInputChange}\n                    min=\"0.1\"\n                    step=\"0.1\"\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter volume\"\n                    required\n                  />\n                  {validationErrors.volume && (\n                    <p className=\"text-red-500 text-sm mt-1\">{validationErrors.volume}</p>\n                  )}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Unit\n                  </label>\n                  <select\n                    name=\"volumeUnit\"\n                    value={formData.volumeUnit}\n                    onChange={handleInputChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    {volumeUnits.map(unit => (\n                      <option key={unit.value} value={unit.value}>\n                        {unit.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              {/* ✅ NEW: Real-time Truck Requirements Display */}\n              {formData.volume && parseFloat(formData.volume) > 0 && formData.fuelType && (\n                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-3\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <span className=\"text-blue-600\">🚛</span>\n                    <h4 className=\"font-medium text-blue-800\">Quick Truck Requirements</h4>\n                  </div>\n                  {(() => {\n                    const volumeInTonnes = parseFloat(formData.volume) * (volumeUnits.find(u => u.value === formData.volumeUnit)?.factor || 1);\n                    const truckCapacities = {\n                      hydrogen: 8,\n                      methanol: 12,\n                      ammonia: 10,\n                      gasoline: 12,\n                      diesel: 12,\n                      ethanol: 12\n                    };\n                    const maxCapacity = truckCapacities[formData.fuelType] || 10;\n                    const trucksNeeded = Math.max(1, Math.ceil(volumeInTonnes / maxCapacity));\n                    const utilizationPercent = Math.round((volumeInTonnes / (trucksNeeded * maxCapacity)) * 100);\n                    \n                    return (\n                      <div className=\"text-sm text-blue-700\">\n                        <div className=\"font-medium\">\n                          {trucksNeeded} truck{trucksNeeded > 1 ? 's' : ''} required for {volumeInTonnes.toFixed(1)} tonnes of {formData.fuelType}\n                        </div>\n                        <div className=\"text-xs mt-1\">\n                          {maxCapacity} tonnes capacity per truck • {utilizationPercent}% utilization\n                        </div>\n                      </div>\n                    );\n                  })()}\n                </div>\n              )}\n\n              {/* Origin */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Origin * {aiValidating && <span className=\"text-blue-500\">🤖 AI Validating...</span>}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"origin\"\n                  value={formData.origin}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter origin\"\n                  required\n                  list=\"origin-suggestions\"\n                />\n                <datalist id=\"origin-suggestions\">\n                  {commonLocations.map((location, index) => (\n                    <option key={index} value={location} />\n                  ))}\n                </datalist>\n                {locationSuggestions.origin && locationSuggestions.origin.valid && (\n                  <div className=\"mt-1 text-sm text-green-600\">\n                    ✅ {locationSuggestions.origin.corrected} \n                    {locationSuggestions.origin.country && ` (${locationSuggestions.origin.country})`}\n                    <br />\n                    <span className=\"text-xs\">\n                      📍 {locationSuggestions.origin.region} • {locationSuggestions.origin.type}\n                    </span>\n                  </div>\n                )}\n                {locationSuggestions.origin && !locationSuggestions.origin.valid && (\n                  <div className=\"mt-1 text-sm text-red-600\">\n                    ❌ {locationSuggestions.origin.error}\n                  </div>\n                )}\n                {validationErrors.origin && (\n                  <p className=\"text-red-500 text-sm mt-1\">{validationErrors.origin}</p>\n                )}\n              </div>\n\n              {/* Destination */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Destination * {aiValidating && <span className=\"text-blue-500\">🤖 AI Validating...</span>}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"destination\"\n                  value={formData.destination}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter destination\"\n                  required\n                  list=\"destination-suggestions\"\n                />\n                <datalist id=\"destination-suggestions\">\n                  {commonLocations.map((location, index) => (\n                    <option key={index} value={location} />\n                  ))}\n                </datalist>\n                {locationSuggestions.destination && locationSuggestions.destination.valid && (\n                  <div className=\"mt-1 text-sm text-green-600\">\n                    ✅ {locationSuggestions.destination.corrected}\n                    {locationSuggestions.destination.country && ` (${locationSuggestions.destination.country})`}\n                    <br />\n                    <span className=\"text-xs\">\n                      📍 {locationSuggestions.destination.region} • {locationSuggestions.destination.type}\n                    </span>\n                  </div>\n                )}\n                {locationSuggestions.destination && !locationSuggestions.destination.valid && (\n                  <div className=\"mt-1 text-sm text-red-600\">\n                    ❌ {locationSuggestions.destination.error}\n                  </div>\n                )}\n                {validationErrors.destination && (\n                  <p className=\"text-red-500 text-sm mt-1\">{validationErrors.destination}</p>\n                )}\n              </div>\n\n              {/* Intermediate Hub */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Intermediate Hub (Optional) {aiValidating && <span className=\"text-blue-500\">🤖 AI Validating...</span>}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"intermediateHub\"\n                  value={formData.intermediateHub}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter intermediate hub (optional)\"\n                  list=\"hub-suggestions\"\n                />\n                <datalist id=\"hub-suggestions\">\n                  {commonLocations.map((location, index) => (\n                    <option key={index} value={location} />\n                  ))}\n                </datalist>\n                {locationSuggestions.intermediateHub && locationSuggestions.intermediateHub.valid && (\n                  <div className=\"mt-1 text-sm text-green-600\">\n                    ✅ {locationSuggestions.intermediateHub.corrected}\n                    {locationSuggestions.intermediateHub.country && ` (${locationSuggestions.intermediateHub.country})`}\n                    <br />\n                    <span className=\"text-xs\">\n                      📍 {locationSuggestions.intermediateHub.region} • {locationSuggestions.intermediateHub.type}\n                    </span>\n                  </div>\n                )}\n                {locationSuggestions.intermediateHub && !locationSuggestions.intermediateHub.valid && (\n                  <div className=\"mt-1 text-sm text-red-600\">\n                    ❌ {locationSuggestions.intermediateHub.error}\n                  </div>\n                )}\n                {validationErrors.intermediateHub && (\n                  <p className=\"text-red-500 text-sm mt-1\">{validationErrors.intermediateHub}</p>\n                )}\n              </div>\n\n              {/* Transport Mode 1 */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Transport Mode {(formData.intermediateHub && formData.intermediateHub.trim() !== '') ? '(First Leg)' : ''}\n                </label>\n                <select\n                  name=\"transportMode1\"\n                  value={formData.transportMode1}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  {transportModes.map(mode => (\n                    <option key={mode.value} value={mode.value}>{mode.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              {/* FIXED: Transport Mode 2 - Only show when actually needed */}\n              {shouldShowSecondTransportMode() ? (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Transport Mode (Second Leg) \n                    {(formData.intermediateHub && formData.intermediateHub.trim() !== '') ? \n                      ' (To Final Destination)' : \n                      ' (Long Route)'}\n                  </label>\n                  <select\n                    name=\"transportMode2\"\n                    value={formData.transportMode2}\n                    onChange={handleInputChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    {transportModes.map(mode => (\n                      <option key={mode.value} value={mode.value}>{mode.label}</option>\n                    ))}\n                  </select>\n                  \n                  {/* Show helpful text for long routes without intermediate hub */}\n                  {!isShortRoute() && (!formData.intermediateHub || formData.intermediateHub.trim() === '') && (\n                    <p className=\"text-xs text-blue-600 mt-1\">\n                      💡 Long route: Rail transport recommended via intermediate hub for optimal cost and safety.\n                    </p>\n                  )}\n                </div>\n              ) : (\n                /* FIXED: Show info for short routes */\n                <div className=\"bg-green-50 border border-green-200 rounded-md p-3\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <span className=\"text-green-400\">✅</span>\n                    </div>\n                    <div className=\"ml-2\">\n                      <p className=\"text-green-700 text-sm\">\n                        <strong>Short Domestic Route Detected:</strong> Single transport mode sufficient. \n                        No intermediate hub or second transport mode required for this {locationSuggestions.origin?.region || 'domestic'} route.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Route Insights */}\n              {routeInsights && (\n                <div className=\"bg-blue-50 border border-blue-200 rounded-md p-3\">\n                  <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                      <span className=\"text-blue-400\">💡</span>\n                    </div>\n                    <div className=\"ml-2\">\n                      <p className=\"text-blue-700 text-sm\">{routeInsights}</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Transport Error */}\n              {validationErrors.transport && (\n                <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n                  <p className=\"text-red-700 text-sm\">{validationErrors.transport}</p>\n                </div>\n              )}\n\n              {/* Calculator Mode Selection */}\n              <div className=\"bg-gray-50 p-3 rounded-md mb-4\">\n                <div className=\"space-y-2\">\n                </div>\n              </div>\n\n              {/* Optimization Preference */}\n              <div className=\"bg-gray-50 p-3 rounded-md mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Optimization Preference\n                </label>\n                <select\n                  name=\"preference\"\n                  value={formData.preference}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"cost\">Lowest Cost</option>\n                  <option value=\"distance\">Shortest Distance</option>\n                </select>\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"space-y-4 mt-6\">\n                <button\n                  onClick={() => handleSubmit('options')}\n                  disabled={loading || currentApiStatus !== 'connected' || Object.keys(validationErrors).length > 0}\n                  className=\"calculate-with-ai-btn\"\n                >\n                  <span className=\"button-text\">\n                    {loading ? 'CALCULATING WITH AI ENHANCEMENT...' : 'CALCULATE WITH AI ENHANCEMENT'}\n                  </span>\n                  {currentApiStatus === 'connected' && !loading && (\n                    <span className=\"button-subtitle\">\n                      Multiple Route Options\n                    </span>\n                  )}\n                </button>\n              </div>\n\n              {/* Error Display */}\n              {error && (\n                <div className=\"mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\n                  {error}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Results Section */}\n          <div className=\"space-y-6\">\n            <React.Fragment>\n              {/* Route Options with FIXED AI Enhancement Indicators */}\n              {result && result.routeOptions && Array.isArray(result.routeOptions) && (\n                <div className=\"bg-white rounded-lg shadow-md p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 text-blue-700\">\n                    Route Options ({result.routeOptions.length} found)\n                    {result.aiEnhanced && (\n                      <span className=\"ml-2 text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                        🤖 AI Enhanced\n                      </span>\n                    )}\n                    {result.aiRecommendation && (\n                      <span className=\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded\">\n                        ✨ AI Optimized\n                      </span>\n                    )}\n                  </h3>\n                  \n                  {/* ✅ FIXED: AI Processing Info with accurate status */}\n                  {result.processingInfo && (\n                    <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-3 mb-4\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <span className=\"text-blue-600\">🤖</span>\n                        <h4 className=\"font-medium text-blue-800\">AI Enhancement Status</h4>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-4 text-sm text-blue-700\">\n                        <div>\n                          <span className=\"font-medium\">Dynamic Pricing:</span> \n                          <span className=\"ml-1\">\n                            {result.routeOptions.some(r => r.aiEnhanced) ? '✅ Active' : '⚠️ Fallback'}\n                          </span>\n                        </div>\n                        <div>\n                          <span className=\"font-medium\">Distance Calculation:</span> \n                          <span className=\"ml-1\">✅ AI-Enhanced</span>\n                        </div>\n                        <div>\n                          <span className=\"font-medium\">Market Factors:</span> \n                          <span className=\"ml-1\">\n                            {result.routeOptions.some(r => r.aiFactors && !r.aiFactors.error) ? 'Real-time' : 'Static'}\n                          </span>\n                        </div>\n                        <div>\n                          <span className=\"font-medium\">AI-Enhanced Options:</span> \n                          <span className=\"ml-1\">\n                            {result.routeOptions.filter(r => r.aiEnhanced).length}/{result.routeOptions.length}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n        \n                  {/* Search Summary */}\n                  {result.searchQuery && (\n                    <div className=\"bg-gray-50 p-3 rounded mb-4 text-sm\">\n                      <strong>Search:</strong> {result.searchQuery.from} → {result.searchQuery.to} | \n                      {result.searchQuery.volume} tonnes {result.searchQuery.fuelType}\n                    </div>\n                  )}\n\n                  {/* Route Options Display - Updated for All-In Costs */}\n                  <div className=\"space-y-4\">\n                    {result.routeOptions.map((option, index) => (\n                      <div \n                        key={option.id || index} \n                        className={`border rounded-lg p-4 transition-all cursor-pointer ${\n                          mapData.selectedRoute && mapData.selectedRoute.id === option.id\n                            ? 'border-blue-500 bg-blue-50 shadow-md' \n                            : index === 0 || option.recommended ? 'border-green-500 bg-green-50' : \n                              option.aiEnhanced ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:bg-gray-50 hover:border-blue-300'\n                        }`}\n                        onClick={() => {\n                          // Add this click handler to route option cards\n                          const mapRoute = mapData.routeVisualizations.find(r => \n                            r.id === option.id || r.name === option.name\n                          );\n                          if (mapRoute) {\n                            handleMapRouteSelect(mapRoute);\n                          }\n                        }}\n                      >\n                        <div className=\"flex justify-between items-start\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-2 flex-wrap\">\n                              <h4 className=\"font-semibold text-gray-900\">{option.name || 'Unknown Route'}</h4>\n                              {(index === 0 || option.recommended) && (\n                                <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded\">\n                                  🎯 RECOMMENDED\n                                </span>\n                              )}\n                              {option.aiEnhanced && (\n                                <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                                  🤖 AI ENHANCED\n                                </span>\n                              )}\n                              \n                              {/* ✅ NEW: All-In Cost Badge */}\n                              <span className=\"text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded\">\n                                💰 ALL-IN PRICE\n                              </span>\n                              {/* ✅ ADD: Map selection indicator */}\n                              {mapData.selectedRoute && mapData.selectedRoute.id === option.id && (\n                                <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                                  🗺️ SELECTED ON MAP\n                                </span>\n                              )}\n                            </div>\n                          \n                            <div className=\"text-sm text-gray-600 space-y-1\">\n                              <div>⏱️ Estimated Time: {option.estimatedTime || 'Unknown'}</div>\n                              <div>📍 Distance: {option.distance || 'Unknown'} miles</div>\n                              <div>⚠️ Risk Level: <span className={`capitalize ${\n                                option.riskLevel === 'low' ? 'text-green-600' : \n                                option.riskLevel === 'medium' ? 'text-yellow-600' : 'text-red-600'\n                              }`}>{option.riskLevel || 'Unknown'}</span></div>\n                              \n                              {/* ✅ NEW: Cost Breakdown Preview */}\n                              {option.costBreakdown && (\n                                <div className=\"bg-gray-50 rounded p-2 mt-2\">\n                                  <div className=\"text-xs font-medium text-gray-700 mb-1\">💰 Cost Breakdown:</div>\n                                  <div className=\"text-xs text-gray-600 space-y-1\">\n                                    <div className=\"flex justify-between\">\n                                      <span>🚛 Transport & Logistics:</span>\n                                      <span className=\"font-medium\">{formatCurrency(option.costBreakdown.transportCost || 0)}</span>\n                                    </div>\n                                    <div className=\"flex justify-between\">\n                                      <span>⛽ Fuel Purchase ({formData.volume} tonnes):</span>\n                                      <span className=\"font-medium\">{formatCurrency(option.costBreakdown.commodityCost || 0)}</span>\n                                    </div>\n                                    <div className=\"flex justify-between border-t pt-1 font-semibold\">\n                                      <span>💰 Total Project Cost:</span>\n                                      <span className=\"text-green-600\">{formatCurrency(option.costBreakdown.totalCost || option.estimatedCost)}</span>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {option.description && (\n                                <div className=\"italic mt-2\">💡 {option.description}</div>\n                              )}\n                            </div>\n                          </div>\n                          \n                          <div className=\"text-right ml-4\">\n                            {/* ✅ UPDATED: Emphasize All-In Cost */}\n                            <div className=\"text-xs text-gray-500 mb-1\">TOTAL PROJECT COST</div>\n                            <div className=\"text-2xl font-bold text-green-600\">\n                              {formatCurrency(option.estimatedCost || 0)}\n                            </div>\n                            <div className=\"text-xs text-gray-500 mt-1\">\n                              Transport + Fuel Included\n                            </div>\n                            {option.aiEnhanced && (\n                              <div className=\"text-xs text-blue-600 mb-1\">🤖 AI Pricing</div>\n                            )}\n                            <button \n                              onClick={() => calculateDetailedCost(option)}\n                              className=\"mt-2 text-sm bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 transition-colors\"\n                            >\n                              Get Details\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {result?.routeOptions && (\n                <div className=\"bg-white rounded-lg shadow-md p-6\">\n                  <CostComparisonChart routes={result.routeOptions} />\n                </div>\n              )}\n\n              {/* Detailed Calculation Results with CLEAR cost separation */}\n              {result && result.calculation && (\n                <div className=\"bg-white rounded-lg shadow-md p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 text-green-700\">\n                    Detailed Cost Calculation\n                    {result.aiEnhanced && (\n                      <span className=\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded\">\n                        🤖 AI Enhanced\n                      </span>\n                    )}\n                  </h3>\n                  \n                  {/* Selected Route Info */}\n                  {result.selectedRoute && (\n                    <div className=\"bg-blue-50 p-3 rounded mb-4\">\n                      <h4 className=\"font-medium text-blue-800\">{result.selectedRoute.name}</h4>\n                      <p className=\"text-blue-700 text-sm\">{result.selectedRoute.description}</p>\n                      { (result.selectedRoute.trucksNeeded || result.calculation?.trucksNeeded) && (\n                        <p className=\"text-blue-700 text-sm\">🚚 {formatTrucks(result.selectedRoute.trucksNeeded || result.calculation.trucksNeeded)}</p>\n                      )}\n                    </div>\n                  )}\n\n                  {result && result.calculation && result.selectedRoute && (\n                    <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n                      <h3 className=\"text-lg font-semibold mb-4 text-blue-700\">\n                        📍 Detailed Route Visualization\n                      </h3>\n                      <RouteMap \n                        routeOptions={[result.selectedRoute]}\n                        selectedRoute={result.selectedRoute}\n                        origin={formData.origin}\n                        destination={formData.destination}\n                        onRouteSelect={() => {}}\n                        showAllRoutes={false}\n                        height=\"500px\"\n                      />\n                    </div>\n                  )}\n                  \n                  <div className=\"space-y-4\">\n                    {/* ✅ MAIN: Total Project Cost */}\n                    <div className=\"text-3xl font-bold text-green-600 text-center p-4 bg-green-50 rounded\">\n                      Total Project Cost: {formatCurrency(result.calculation.totalCost)}\n                    </div>\n                    \n                    {/* ✅ CLEAR: Cost Summary - Transport vs Commodity */}\n                    {result.calculation.costSummary && (\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                        <div className=\"bg-blue-50 border border-blue-200 rounded p-3 text-center\">\n                          <h4 className=\"font-medium text-blue-800 mb-1\">🚛 Pure Transport</h4>\n                          <div className=\"text-xl font-bold text-blue-600\">\n                            {formatCurrency(result.calculation.costSummary.pureTransportCosts)}\n                          </div>\n                          <div className=\"text-xs text-blue-600 mt-1\">\n                            Logistics & Delivery\n                          </div>\n                        </div>\n                        \n                        <div className=\"bg-orange-50 border border-orange-200 rounded p-3 text-center\">\n                          <h4 className=\"font-medium text-orange-800 mb-1\">⛽ Commodity</h4>\n                          <div className=\"text-xl font-bold text-orange-600\">\n                            {formatCurrency(result.calculation.costSummary.commodityCosts)}\n                          </div>\n                          <div className=\"text-xs text-orange-600 mt-1\">\n                            Fuel Purchase\n                          </div>\n                        </div>\n                        \n                        <div className=\"bg-green-50 border border-green-200 rounded p-3 text-center\">\n                          <h4 className=\"font-medium text-green-800 mb-1\">💰 Total Project</h4>\n                          <div className=\"text-xl font-bold text-green-600\">\n                            {formatCurrency(result.calculation.costSummary.totalProjectCosts)}\n                          </div>\n                          <div className=\"text-xs text-green-600 mt-1\">\n                            Complete Solution\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* ✅ BREAKDOWN: Transport Costs Only */}\n                    <div className=\"bg-blue-50 border border-blue-200 rounded p-4\">\n                      <h4 className=\"font-medium mb-3 text-blue-800\">🚛 Transport & Logistics Breakdown:</h4>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>Base Transport Cost:</span>\n                          <span className=\"font-semibold\">{formatCurrency(result.calculation.baseCost)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Fuel Handling Fee:</span>\n                          <span>{formatCurrency(result.calculation.costBreakdown.fuelHandlingFee)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Terminal Fees:</span>\n                          <span>{formatCurrency(result.calculation.costBreakdown.terminalFees)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Hub Transfer Fee:</span>\n                          <span>{formatCurrency(result.calculation.costBreakdown.hubTransferFee)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Insurance Cost:</span>\n                          <span>{formatCurrency(result.calculation.costBreakdown.insuranceCost)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Carbon Offset:</span>\n                          <span>{formatCurrency(result.calculation.costBreakdown.carbonOffset)}</span>\n                        </div>\n                        <div className=\"flex justify-between border-t pt-2 font-bold text-blue-800\">\n                          <span>Total Transport:</span>\n                          <span>{formatCurrency(result.calculation.costSummary.pureTransportCosts)}</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* ✅ BREAKDOWN: Commodity Costs */}\n                    <div className=\"bg-orange-50 border border-orange-200 rounded p-4\">\n                      <h4 className=\"font-medium mb-3 text-orange-800\">⛽ Commodity Purchase Breakdown:</h4>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>Volume:</span>\n                          <span>{formData.volume} tonnes</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Market Price per Tonne:</span>\n                          <span>${result.calculation.costBreakdown.commodityPricePerTonne}/tonne</span>\n                        </div>\n                        <div className=\"flex justify-between border-t pt-2 font-bold text-orange-800\">\n                          <span>Total Commodity Cost:</span>\n                          <span>{formatCurrency(result.calculation.costBreakdown.commodityCost)}</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* ✅ SUMMARY: Cost per Unit Analysis */}\n                    <div className=\"bg-gray-50 border border-gray-200 rounded p-4\">\n                      <h4 className=\"font-medium mb-3 text-gray-800\">📊 Cost per Unit Analysis:</h4>\n                      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                        <div>\n                          <span className=\"font-medium\">Transport Cost per Tonne:</span><br />\n                          <span className=\"text-lg font-bold text-blue-600\">\n                            ${(result.calculation.costSummary.pureTransportCosts / parseFloat(formData.volume)).toFixed(2)}/tonne\n                          </span>\n                        </div>\n                        <div>\n                          <span className=\"font-medium\">Total Cost per Tonne:</span><br />\n                          <span className=\"text-lg font-bold text-green-600\">\n                            ${(result.calculation.totalCost / parseFloat(formData.volume)).toFixed(2)}/tonne\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    \n\n                    {/* Confidence & Metadata */}\n                    <div className=\"flex justify-between items-center text-sm text-gray-600 pt-4 border-t\">\n                      <div>\n                        <strong>Confidence Score:</strong> {result.calculation.confidence}%\n                      </div>\n                      <div>\n                        Route ID: {result.routeId} | Calculated: {formatDate(result.timestamp)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Legacy Single Result Support (Fallback) */}\n              {result && result.data && !result.routeOptions && !result.calculation && (\n                <div className=\"bg-white rounded-lg shadow-md p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 text-green-700\">\n                    Cost Calculation Results\n                    {result.data.aiInsights?.aiUsed && (\n                      <span className=\"ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded\">\n                        🤖 AI Enhanced\n                      </span>\n                    )}\n                  </h3>\n                  \n                  <div className=\"space-y-3\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      Total Cost: {formatCurrency(result.data.totalCost)}\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <strong>Base Cost:</strong><br />\n                        {formatCurrency(result.data.baseCost)}\n                      </div>\n                      <div>\n                        <strong>Distance:</strong><br />\n                        {result.data.distance} miles\n                      </div>\n                      {result.data.trucksNeeded && (\n                        <div>\n                          <strong>Trucks Needed:</strong><br />\n                          {formatTrucks(result.data.trucksNeeded)}\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Cost Breakdown */}\n                    <div className=\"mt-4\">\n                      <h4 className=\"font-medium mb-2\">Cost Breakdown:</h4>\n                      <div className=\"space-y-1 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>Fuel Handling Fee:</span>\n                          <span>{formatCurrency(result.data.costBreakdown.fuelHandlingFee)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Terminal Fees:</span>\n                          <span>{formatCurrency(result.data.costBreakdown.terminalFees)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Hub Transfer Fee:</span>\n                          <span>{formatCurrency(result.data.costBreakdown.hubTransferFee)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Insurance Cost:</span>\n                          <span>{formatCurrency(result.data.costBreakdown.insuranceCost)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Carbon Offset:</span>\n                          <span>{formatCurrency(result.data.costBreakdown.carbonOffset)}</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Route Legs */}\n                    {result.data.legs && (\n                      <div className=\"mt-4\">\n                        <h4 className=\"font-medium mb-2\">Route Details:</h4>\n                        <div className=\"space-y-1 text-sm\">\n                          <div>Leg 1: {result.data.legs.leg1.distance} miles via {result.data.legs.leg1.mode} - {formatCurrency(result.data.legs.leg1.cost)}</div>\n                          <div>Leg 2: {result.data.legs.leg2.distance} miles via {result.data.legs.leg2.mode} - {formatCurrency(result.data.legs.leg2.cost)}</div>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* AI Insights */}\n                    {result.data.aiInsights?.recommendation && (\n                      <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded\">\n                        <h4 className=\"font-medium mb-1 text-blue-800\">🤖 AI Insights:</h4>\n                        <p className=\"text-blue-700 text-sm\">{result.data.aiInsights.recommendation}</p>\n                      </div>\n                    )}\n\n                    <div className=\"text-xs text-gray-500 mt-4\">\n                      Confidence: {result.data.confidence}% | Calculated: {formatDate(result.data.timestamp)}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Route History */}\n              {routeHistory.length > 0 && (\n                <div className=\"bg-white rounded-lg shadow-md p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Recent Calculations</h3>\n                  <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n                    {routeHistory.slice(0, 5).map((route) => (\n                      <div key={route._id} className=\"border-b pb-2 last:border-b-0\">\n                        <div className=\"flex justify-between items-start\">\n                          <div className=\"text-sm\">\n                            <div className=\"font-medium\">\n                              {route.origin} → {route.destination}\n                            </div>\n                            <div className=\"text-gray-600\">\n                              {route.volume} tonnes {route.fuelType}\n                            </div>\n                          </div>\n                          <div className=\"text-right text-sm\">\n                            <div className=\"font-bold text-green-600\">\n                              {formatCurrency(route.calculatedCost)}\n                            </div>\n                            <div className=\"text-gray-500 text-xs\">\n                              {formatDate(route.timestamp)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </React.Fragment>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FuelRouteApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}