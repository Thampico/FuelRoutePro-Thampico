{"ast":null,"code":"var _jsxFileName = \"/Users/saloniangre/Downloads/Fuelroute/FinalFRP/frontend/src/components/RouteMap.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/RouteMap.js\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, LayersControl, FeatureGroup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './RouteMap.css';\n\n// Fix default markers (Leaflet + React issue)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png'\n});\n\n// Custom icons for different transport modes\nconst createCustomIcon = (color, symbol, size = 30) => {\n  const fontSize = (size * 0.53).toFixed(2);\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `<div style=\"\n      background-color: ${color};\n      width: ${size}px;\n      height: ${size}px;\n      border-radius: 50%;\n      border: 3px solid white;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: ${fontSize}px;\n      color: white;\n      font-weight: bold;\n    \">${symbol}</div>`,\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2],\n    popupAnchor: [0, -size / 2]\n  });\n};\n\n// Transport mode styling\nconst transportStyles = {\n  truck: {\n    color: '#2563eb',\n    // Blue\n    weight: 4,\n    opacity: 0.8,\n    dashArray: null,\n    icon: '🚛'\n  },\n  rail: {\n    color: '#dc2626',\n    // Red\n    weight: 6,\n    opacity: 0.7,\n    dashArray: '10, 5',\n    icon: '🚂'\n  }\n};\n\n// Add this function after the imports (around line 50):\nconst generateCurvedPath = (start, end, transportMode) => {\n  if (!start || !end) return [start, end].filter(Boolean);\n  const [lat1, lng1] = start;\n  const [lat2, lng2] = end;\n\n  // Calculate midpoint\n  const midLat = (lat1 + lat2) / 2;\n  const midLng = (lng1 + lng2) / 2;\n\n  // Add curvature based on transport mode and distance\n  const distance = Math.sqrt(Math.pow(lat2 - lat1, 2) + Math.pow(lng2 - lng1, 2));\n  let curveOffset = distance * 0.3; // Base curve\n\n  // Mode-specific routing adjustments\n  if (transportMode === 'rail') {\n    // Rail follows network topology\n    curveOffset = distance * 0.25;\n  } else if (transportMode === 'truck') {\n    // Trucks follow highways\n    curveOffset = distance * 0.15;\n  }\n\n  // Create curved path with multiple waypoints\n  const waypoints = [];\n  const segments = 8; // Number of curve segments\n\n  for (let i = 0; i <= segments; i++) {\n    const t = i / segments;\n\n    // Bezier curve calculation\n    const lat = lat1 + t * (lat2 - lat1) + Math.sin(t * Math.PI) * curveOffset;\n    const lng = lng1 + t * (lng2 - lng1) + Math.cos(t * Math.PI) * curveOffset * 0.5;\n    waypoints.push([lat, lng]);\n  }\n  return waypoints;\n};\n\n// Decode an encoded polyline string into an array of [lat, lng] coordinates\nconst decodePolyline = encoded => {\n  if (!encoded) return [];\n  let index = 0;\n  let lat = 0;\n  let lng = 0;\n  const coordinates = [];\n  while (index < encoded.length) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = encoded.charCodeAt(index++) - 63;\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 0x20);\n    const deltaLat = result & 1 ? ~(result >> 1) : result >> 1;\n    lat += deltaLat;\n    shift = 0;\n    result = 0;\n    do {\n      b = encoded.charCodeAt(index++) - 63;\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 0x20);\n    const deltaLng = result & 1 ? ~(result >> 1) : result >> 1;\n    lng += deltaLng;\n    coordinates.push([lat * 1e-5, lng * 1e-5]);\n  }\n  return coordinates;\n};\n\n// Generic coastal paths used when no specific route exists\nconst coastalPaths = {\n  west: [[32.7157, -117.1611], [33.7292, -118.2620], [36.6002, -121.8947], [39.1612, -123.7881], [43.3504, -124.3738], [46.2816, -124.0833], [47.6062, -122.3321]],\n  gulf: [[29.7050, -95.0030], [29.4724, -94.0572], [29.9511, -90.0715], [30.6944, -88.0431], [27.9506, -82.4572]],\n  east: [[25.7617, -80.1918], [30.3322, -81.6557], [32.0835, -81.0998], [33.8734, -78.8808], [35.2271, -75.5449], [36.8468, -76.2852], [40.7128, -74.0060], [42.3601, -71.0589]]\n};\n\n// Build a simple coastal fallback between two coordinates\nconst generateCoastalFallback = (start, end) => {\n  if (!start || !end) return [];\n  const paths = Object.values(coastalPaths);\n  const calcDist = (a, b) => L.latLng(a[0], a[1]).distanceTo(L.latLng(b[0], b[1]));\n  let bestPath = paths[0];\n  let bestScore = Infinity;\n  paths.forEach(path => {\n    const score = calcDist(start, path[0]) + calcDist(end, path[path.length - 1]);\n    if (score < bestScore) {\n      bestScore = score;\n      bestPath = path;\n    }\n  });\n  const nearestIndex = (coords, path) => {\n    let idx = 0;\n    let min = Infinity;\n    path.forEach((p, i) => {\n      const d = calcDist(coords, p);\n      if (d < min) {\n        min = d;\n        idx = i;\n      }\n    });\n    return idx;\n  };\n  const startIdx = nearestIndex(start, bestPath);\n  const endIdx = nearestIndex(end, bestPath);\n  let slice = bestPath.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  if (startIdx > endIdx) slice = slice.reverse();\n  slice[0] = start;\n  slice[slice.length - 1] = end;\n  return slice;\n};\n\n// Major US ports and hubs with coordinates\nconst locations = {\n  'Houston, TX': [29.7604, -95.3698],\n  'New Orleans, LA': [29.9511, -90.0715],\n  'Mobile, AL': [30.6944, -88.0431],\n  'Tampa Bay, FL': [27.9506, -82.4572],\n  'Savannah, GA': [32.0835, -81.0998],\n  'Jacksonville, FL': [30.3322, -81.6557],\n  'Miami, FL': [25.7617, -80.1918],\n  'New York/NJ': [40.7128, -74.0060],\n  'Philadelphia, PA': [39.9526, -75.1652],\n  'Norfolk, VA': [36.8468, -76.2852],\n  'Boston, MA': [42.3601, -71.0589],\n  'Long Beach, CA': [33.7701, -118.1937],\n  'Los Angeles, CA': [34.0522, -118.2437],\n  'Seattle, WA': [47.6062, -122.3321],\n  'Portland, OR': [45.5152, -122.6784],\n  'San Francisco/Oakland, CA': [37.7749, -122.4194],\n  'Chicago, IL': [41.8781, -87.6298],\n  'St. Louis, MO': [38.6270, -90.1994],\n  'Memphis, TN': [35.1495, -90.0490],\n  'Duluth-Superior, MN/WI': [46.7867, -92.1005]\n};\nconst RouteMap = ({\n  routeOptions = [],\n  selectedRoute = null,\n  origin = '',\n  destination = '',\n  onRouteSelect,\n  showAllRoutes = false,\n  height = '500px'\n}) => {\n  _s();\n  const [routeData, setRouteData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([39.8283, -98.5795]); // Center of US\n  const [mapZoom, setMapZoom] = useState(4);\n\n  // Debug logging - moved inside component\n  useEffect(() => {\n    console.log('RouteMap props:', {\n      routeOptions,\n      selectedRoute,\n      origin,\n      destination\n    });\n  }, [routeOptions, selectedRoute, origin, destination]);\n\n  // Add realistic route paths for different transport modes\n  const getRealisticRoutePath = (origin, destination, transportMode) => {\n    const originCoords = locations[origin];\n    const destCoords = locations[destination];\n    if (!originCoords || !destCoords) return [originCoords, destCoords].filter(Boolean);\n\n    // Define intermediate waypoints for major routes\n    const routeWaypoints = {\n      'Los Angeles, CA-Seattle, WA': {\n        truck: [[34.0522, -118.2437], [36.7783, -119.4179], [37.7749, -122.4194], [45.5152, -122.6784], [47.6062, -122.3321]],\n        // Via Central Valley, SF, Portland\n        rail: [[34.0522, -118.2437], [35.3733, -119.0187], [37.7749, -122.4194], [45.5152, -122.6784], [47.6062, -122.3321]] // Rail network route\n      },\n      'Houston, TX-New Orleans, LA': {\n        truck: [[29.7604, -95.3698], [30.2241, -93.2044], [29.9511, -90.0715]],\n        // Via I-10\n        rail: [[29.7604, -95.3698], [30.1588, -94.1213], [29.9511, -90.0715]] // Rail corridor\n      }\n      // Add more routes as needed\n    };\n    const routeKey = `${origin}-${destination}`;\n    const reverseKey = `${destination}-${origin}`;\n    if (routeWaypoints[routeKey] && routeWaypoints[routeKey][transportMode]) {\n      return routeWaypoints[routeKey][transportMode];\n    } else if (routeWaypoints[reverseKey] && routeWaypoints[reverseKey][transportMode]) {\n      return [...routeWaypoints[reverseKey][transportMode]].reverse();\n    }\n\n    // Fallback to direct route for unknown combinations\n    return [originCoords, destCoords];\n  };\n\n  // Process route options for map display\n  // UPDATE the route processing to use backend waypoints:\n  useEffect(() => {\n    if (routeOptions.length > 0) {\n      const processedRoutes = routeOptions.map((route, index) => {\n        let routePath = [];\n\n        // Prefer explicit coordinates from the backend\n        if (Array.isArray(route.routePath) && route.routePath.length >= 2) {\n          if (typeof route.routePath[0] === 'string') {\n            routePath = route.routePath.map(location => locations[location]).filter(coords => coords);\n          } else {\n            routePath = route.routePath;\n          }\n        } else if (route.polyline) {\n          // Decode any encoded polyline provided\n          routePath = decodePolyline(route.polyline);\n        } else if (route.waypoints && route.waypoints.length > 0) {\n          // Backwards compatibility with old waypoint format\n          routePath = route.waypoints;\n        }\n\n        // Fallback handling for missing waypoints\n        if (routePath.length === 0) {\n          var _route$routePath, _route$routePath2, _route$transportModes;\n          const originCoords = locations[((_route$routePath = route.routePath) === null || _route$routePath === void 0 ? void 0 : _route$routePath[0]) || origin];\n          const destCoords = locations[((_route$routePath2 = route.routePath) === null || _route$routePath2 === void 0 ? void 0 : _route$routePath2[route.routePath.length - 1]) || destination];\n          const primaryMode = ((_route$transportModes = route.transportModes) === null || _route$transportModes === void 0 ? void 0 : _route$transportModes[0]) || 'truck';\n\n          // Final fallback to curved path\n          if (routePath.length === 0 && originCoords && destCoords) {\n            routePath = generateCurvedPath(originCoords, destCoords, primaryMode);\n          }\n        }\n        return {\n          id: route.id || `route-${index}`,\n          name: route.name || `Route ${index + 1}`,\n          transportModes: route.transportModes || ['truck'],\n          routePath,\n          distance: route.distance,\n          estimatedTime: route.estimatedTime,\n          estimatedCost: route.estimatedCost,\n          routingMethod: route.routingMethod,\n          fallback: route.fallback || false,\n          selected: selectedRoute && selectedRoute.id === route.id\n        };\n      }).filter(route => route !== null && route.routePath.length > 0);\n      setRouteData(processedRoutes);\n    }\n  }, [routeOptions, selectedRoute, origin, destination]);\n\n  // Format currency\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 text-white px-4 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold flex items-center gap-2\",\n            children: [\"\\uD83D\\uDDFA\\uFE0F Interactive Route Visualization\", routeData.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-200 text-sm\",\n              children: [\"(\", routeData.length, \" route\", routeData.length !== 1 ? 's' : '', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4 text-sm\",\n            children: Object.entries(transportStyles).map(([mode, style]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-1\",\n                style: {\n                  backgroundColor: style.color,\n                  borderStyle: style.dashArray ? 'dashed' : 'solid',\n                  borderWidth: '1px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"capitalize\",\n                children: mode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this)]\n            }, mode, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: mapZoom,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          scrollWheelZoom: true,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openseamap.org\\\">OpenSeaMap</a> contributors\",\n            url: \"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\",\n            opacity: 0.7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n            position: \"topright\",\n            children: [routeData.map(route => /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n              name: route.name,\n              checked: showAllRoutes || route.selected,\n              children: /*#__PURE__*/_jsxDEV(FeatureGroup, {\n                children: [route.routePath.length >= 2 && route.transportModes.map((mode, modeIndex) => {\n                  const style = transportStyles[mode] || transportStyles.truck;\n                  return /*#__PURE__*/_jsxDEV(Polyline, {\n                    positions: route.routePath,\n                    pathOptions: {\n                      color: style.color,\n                      weight: style.weight,\n                      opacity: route.selected ? 1.0 : style.opacity,\n                      dashArray: style.dashArray\n                    },\n                    eventHandlers: {\n                      click: () => {\n                        if (onRouteSelect) {\n                          onRouteSelect(route);\n                        }\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Popup, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"min-w-64\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-semibold text-blue-600 mb-2\",\n                          children: route.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 448,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-1 text-sm\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Distance:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 450,\n                              columnNumber: 38\n                            }, this), \" \", route.distance, \" miles\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Time:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 451,\n                              columnNumber: 38\n                            }, this), \" \", route.estimatedTime]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 451,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Cost:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 452,\n                              columnNumber: 38\n                            }, this), \" \", formatCurrency(route.estimatedCost)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 452,\n                            columnNumber: 33\n                          }, this), route.routingMethod && /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"Method:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 454,\n                              columnNumber: 40\n                            }, this), \" \", route.routingMethod.replace(/_/g, ' ')]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 454,\n                            columnNumber: 35\n                          }, this), route.fallback && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-yellow-600\",\n                            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: \"\\u26A0\\uFE0F Estimated route\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 457,\n                              columnNumber: 68\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 457,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 27\n                    }, this)\n                  }, `${route.id}-${mode}-${modeIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this);\n                }), route.routePath.map((coords, index) => {\n                  const isOrigin = index === 0;\n                  const isDestination = index === route.routePath.length - 1;\n                  const isWaypoint = !isOrigin && !isDestination;\n                  let markerColor = '#6b7280'; // Default gray\n                  let markerSymbol = '📍';\n                  let markerSize = 30;\n                  if (isOrigin) {\n                    markerColor = '#10b981'; // Green\n                    markerSymbol = '📍';\n                  } else if (isDestination) {\n                    markerColor = '#ef4444'; // Red\n                    markerSymbol = '📍';\n                  } else if (isWaypoint) {\n                    markerColor = '#f59e0b'; // Yellow\n                    markerSymbol = '🟡';\n                    markerSize = 15;\n                  }\n                  return /*#__PURE__*/_jsxDEV(Marker, {\n                    position: coords,\n                    icon: createCustomIcon(markerColor, markerSymbol, markerSize),\n                    children: /*#__PURE__*/_jsxDEV(Popup, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"font-semibold\",\n                          children: isOrigin ? 'Origin' : isDestination ? 'Destination' : 'Waypoint'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [\"Coordinates: \", coords[0].toFixed(4), \", \", coords[1].toFixed(4)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 499,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 27\n                    }, this)\n                  }, `${route.id}-marker-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this)\n            }, route.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n              name: \"All Ports & Hubs\",\n              checked: false,\n              children: /*#__PURE__*/_jsxDEV(FeatureGroup, {\n                children: Object.entries(locations).map(([name, coords]) => /*#__PURE__*/_jsxDEV(Marker, {\n                  position: coords,\n                  icon: createCustomIcon('#6366f1', '🏭'),\n                  children: /*#__PURE__*/_jsxDEV(Popup, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"font-semibold\",\n                        children: name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [\"Coordinates: \", coords[0].toFixed(4), \", \", coords[1].toFixed(4)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 521,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-gray-500 mt-1\",\n                        children: \"Available for truck and rail transport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 23\n                  }, this)\n                }, name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), routeData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 px-4 py-3 border-t\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Route Summary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this), \" \", origin, \" \\u2192 \", destination]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4\",\n              children: selectedRoute ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-blue-600\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Selected:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this), \" \", selectedRoute.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500\",\n                children: \"Click on a route to select it\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteMap, \"tevqRjOv/4+Y9BMvJy90DI4TJ6U=\");\n_c = RouteMap;\nexport default RouteMap;\nvar _c;\n$RefreshReg$(_c, \"RouteMap\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Polyline","LayersControl","FeatureGroup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","createCustomIcon","color","symbol","size","fontSize","toFixed","divIcon","className","html","iconSize","iconAnchor","popupAnchor","transportStyles","truck","weight","opacity","dashArray","icon","rail","generateCurvedPath","start","end","transportMode","filter","Boolean","lat1","lng1","lat2","lng2","midLat","midLng","distance","Math","sqrt","pow","curveOffset","waypoints","segments","i","t","lat","sin","PI","lng","cos","push","decodePolyline","encoded","index","coordinates","length","b","shift","result","charCodeAt","deltaLat","deltaLng","coastalPaths","west","gulf","east","generateCoastalFallback","paths","Object","values","calcDist","a","latLng","distanceTo","bestPath","bestScore","Infinity","forEach","path","score","nearestIndex","coords","idx","min","p","d","startIdx","endIdx","slice","max","reverse","locations","RouteMap","routeOptions","selectedRoute","origin","destination","onRouteSelect","showAllRoutes","height","_s","routeData","setRouteData","mapCenter","setMapCenter","mapZoom","setMapZoom","console","log","getRealisticRoutePath","originCoords","destCoords","routeWaypoints","routeKey","reverseKey","processedRoutes","map","route","routePath","Array","isArray","location","polyline","_route$routePath","_route$routePath2","_route$transportModes","primaryMode","transportModes","id","name","estimatedTime","estimatedCost","routingMethod","fallback","selected","formatCurrency","amount","Intl","NumberFormat","style","currency","maximumFractionDigits","format","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","mode","backgroundColor","borderStyle","borderWidth","width","center","zoom","scrollWheelZoom","attribution","url","position","Overlay","checked","modeIndex","positions","pathOptions","eventHandlers","click","replace","isOrigin","isDestination","isWaypoint","markerColor","markerSymbol","markerSize","_c","$RefreshReg$"],"sources":["/Users/saloniangre/Downloads/Fuelroute/FinalFRP/frontend/src/components/RouteMap.js"],"sourcesContent":["// frontend/src/components/RouteMap.js\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, LayersControl, FeatureGroup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './RouteMap.css';\n\n// Fix default markers (Leaflet + React issue)\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png',\n});\n\n// Custom icons for different transport modes\nconst createCustomIcon = (color, symbol, size = 30) => {\n  const fontSize = (size * 0.53).toFixed(2);\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `<div style=\"\n      background-color: ${color};\n      width: ${size}px;\n      height: ${size}px;\n      border-radius: 50%;\n      border: 3px solid white;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: ${fontSize}px;\n      color: white;\n      font-weight: bold;\n    \">${symbol}</div>`,\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2],\n    popupAnchor: [0, -size / 2]\n  });\n};\n\n// Transport mode styling\nconst transportStyles = {\n  truck: {\n    color: '#2563eb', // Blue\n    weight: 4,\n    opacity: 0.8,\n    dashArray: null,\n    icon: '🚛'\n  },\n  rail: {\n    color: '#dc2626', // Red\n    weight: 6,\n    opacity: 0.7,\n    dashArray: '10, 5',\n    icon: '🚂'\n  },\n  \n  };\n\n// Add this function after the imports (around line 50):\nconst generateCurvedPath = (start, end, transportMode) => {\n  if (!start || !end) return [start, end].filter(Boolean);\n  \n  const [lat1, lng1] = start;\n  const [lat2, lng2] = end;\n  \n  // Calculate midpoint\n  const midLat = (lat1 + lat2) / 2;\n  const midLng = (lng1 + lng2) / 2;\n  \n  // Add curvature based on transport mode and distance\n  const distance = Math.sqrt(Math.pow(lat2 - lat1, 2) + Math.pow(lng2 - lng1, 2));\n  let curveOffset = distance * 0.3; // Base curve\n  \n  // Mode-specific routing adjustments\n  if (transportMode === 'rail') {\n    // Rail follows network topology\n    curveOffset = distance * 0.25;\n  } else if (transportMode === 'truck') {\n    // Trucks follow highways\n    curveOffset = distance * 0.15;\n  }\n  \n  // Create curved path with multiple waypoints\n  const waypoints = [];\n  const segments = 8; // Number of curve segments\n  \n  for (let i = 0; i <= segments; i++) {\n    const t = i / segments;\n    \n    // Bezier curve calculation\n    const lat = lat1 + t * (lat2 - lat1) + Math.sin(t * Math.PI) * curveOffset;\n    const lng = lng1 + t * (lng2 - lng1) + Math.cos(t * Math.PI) * curveOffset * 0.5;\n    \n    waypoints.push([lat, lng]);\n  }\n  \n  return waypoints;\n};\n\n// Decode an encoded polyline string into an array of [lat, lng] coordinates\nconst decodePolyline = (encoded) => {\n  if (!encoded) return [];\n\n  let index = 0;\n  let lat = 0;\n  let lng = 0;\n  const coordinates = [];\n\n  while (index < encoded.length) {\n    let b;\n    let shift = 0;\n    let result = 0;\n\n    do {\n      b = encoded.charCodeAt(index++) - 63;\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 0x20);\n\n    const deltaLat = (result & 1) ? ~(result >> 1) : (result >> 1);\n    lat += deltaLat;\n\n    shift = 0;\n    result = 0;\n\n    do {\n      b = encoded.charCodeAt(index++) - 63;\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 0x20);\n\n    const deltaLng = (result & 1) ? ~(result >> 1) : (result >> 1);\n    lng += deltaLng;\n\n    coordinates.push([lat * 1e-5, lng * 1e-5]);\n  }\n\n  return coordinates;\n};\n\n\n// Generic coastal paths used when no specific route exists\nconst coastalPaths = {\n  west: [\n    [32.7157, -117.1611],\n    [33.7292, -118.2620],\n    [36.6002, -121.8947],\n    [39.1612, -123.7881],\n    [43.3504, -124.3738],\n    [46.2816, -124.0833],\n    [47.6062, -122.3321]\n  ],\n  gulf: [\n    [29.7050, -95.0030],\n    [29.4724, -94.0572],\n    [29.9511, -90.0715],\n    [30.6944, -88.0431],\n    [27.9506, -82.4572]\n  ],\n  east: [\n    [25.7617, -80.1918],\n    [30.3322, -81.6557],\n    [32.0835, -81.0998],\n    [33.8734, -78.8808],\n    [35.2271, -75.5449],\n    [36.8468, -76.2852],\n    [40.7128, -74.0060],\n    [42.3601, -71.0589]\n  ]\n};\n\n// Build a simple coastal fallback between two coordinates\nconst generateCoastalFallback = (start, end) => {\n  if (!start || !end) return [];\n\n  const paths = Object.values(coastalPaths);\n\n  const calcDist = (a, b) => L.latLng(a[0], a[1]).distanceTo(L.latLng(b[0], b[1]));\n\n  let bestPath = paths[0];\n  let bestScore = Infinity;\n\n  paths.forEach(path => {\n    const score = calcDist(start, path[0]) + calcDist(end, path[path.length - 1]);\n    if (score < bestScore) {\n      bestScore = score;\n      bestPath = path;\n    }\n  });\n\n  const nearestIndex = (coords, path) => {\n    let idx = 0;\n    let min = Infinity;\n    path.forEach((p, i) => {\n      const d = calcDist(coords, p);\n      if (d < min) {\n        min = d;\n        idx = i;\n      }\n    });\n    return idx;\n  };\n\n  const startIdx = nearestIndex(start, bestPath);\n  const endIdx = nearestIndex(end, bestPath);\n\n  let slice = bestPath.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  if (startIdx > endIdx) slice = slice.reverse();\n\n  slice[0] = start;\n  slice[slice.length - 1] = end;\n\n  return slice;\n};\n\n// Major US ports and hubs with coordinates\nconst locations = {\n  'Houston, TX': [29.7604, -95.3698],\n  'New Orleans, LA': [29.9511, -90.0715],\n  'Mobile, AL': [30.6944, -88.0431],\n  'Tampa Bay, FL': [27.9506, -82.4572],\n  'Savannah, GA': [32.0835, -81.0998],\n  'Jacksonville, FL': [30.3322, -81.6557],\n  'Miami, FL': [25.7617, -80.1918],\n  'New York/NJ': [40.7128, -74.0060],\n  'Philadelphia, PA': [39.9526, -75.1652],\n  'Norfolk, VA': [36.8468, -76.2852],\n  'Boston, MA': [42.3601, -71.0589],\n  'Long Beach, CA': [33.7701, -118.1937],\n  'Los Angeles, CA': [34.0522, -118.2437],\n  'Seattle, WA': [47.6062, -122.3321],\n  'Portland, OR': [45.5152, -122.6784],\n  'San Francisco/Oakland, CA': [37.7749, -122.4194],\n  'Chicago, IL': [41.8781, -87.6298],\n  'St. Louis, MO': [38.6270, -90.1994],\n  'Memphis, TN': [35.1495, -90.0490],\n  'Duluth-Superior, MN/WI': [46.7867, -92.1005]\n};\n\nconst RouteMap = ({ \n  routeOptions = [], \n  selectedRoute = null, \n  origin = '', \n  destination = '', \n  onRouteSelect,\n  showAllRoutes = false,\n  height = '500px'\n}) => {\n  const [routeData, setRouteData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([39.8283, -98.5795]); // Center of US\n  const [mapZoom, setMapZoom] = useState(4);\n\n  // Debug logging - moved inside component\n  useEffect(() => {\n    console.log('RouteMap props:', {\n      routeOptions,\n      selectedRoute,\n      origin,\n      destination\n    });\n  }, [routeOptions, selectedRoute, origin, destination]);\n\n  // Add realistic route paths for different transport modes\n  const getRealisticRoutePath = (origin, destination, transportMode) => {\n    const originCoords = locations[origin];\n    const destCoords = locations[destination];\n    \n    if (!originCoords || !destCoords) return [originCoords, destCoords].filter(Boolean);\n    \n    // Define intermediate waypoints for major routes\n    const routeWaypoints = {\n      'Los Angeles, CA-Seattle, WA': {\n        truck: [[34.0522, -118.2437], [36.7783, -119.4179], [37.7749, -122.4194], [45.5152, -122.6784], [47.6062, -122.3321]], // Via Central Valley, SF, Portland\n        rail: [[34.0522, -118.2437], [35.3733, -119.0187], [37.7749, -122.4194], [45.5152, -122.6784], [47.6062, -122.3321]] // Rail network route\n      },\n      'Houston, TX-New Orleans, LA': {\n        truck: [[29.7604, -95.3698], [30.2241, -93.2044], [29.9511, -90.0715]], // Via I-10\n        rail: [[29.7604, -95.3698], [30.1588, -94.1213], [29.9511, -90.0715]] // Rail corridor\n      }\n      // Add more routes as needed\n    };\n  \n  const routeKey = `${origin}-${destination}`;\n  const reverseKey = `${destination}-${origin}`;\n  \n  if (routeWaypoints[routeKey] && routeWaypoints[routeKey][transportMode]) {\n    return routeWaypoints[routeKey][transportMode];\n  } else if (routeWaypoints[reverseKey] && routeWaypoints[reverseKey][transportMode]) {\n    return [...routeWaypoints[reverseKey][transportMode]].reverse();\n  }\n  \n  // Fallback to direct route for unknown combinations\n  return [originCoords, destCoords];\n};\n\n  // Process route options for map display\n  // UPDATE the route processing to use backend waypoints:\nuseEffect(() => {\n  if (routeOptions.length > 0) {\n    const processedRoutes = routeOptions.map((route, index) => {\n      let routePath = [];\n\n      // Prefer explicit coordinates from the backend\n      if (Array.isArray(route.routePath) && route.routePath.length >= 2) {\n        if (typeof route.routePath[0] === 'string') {\n          routePath = route.routePath\n            .map(location => locations[location])\n            .filter(coords => coords);\n        } else {\n          routePath = route.routePath;\n        }\n      } else if (route.polyline) {\n        // Decode any encoded polyline provided\n        routePath = decodePolyline(route.polyline);\n      } else if (route.waypoints && route.waypoints.length > 0) {\n        // Backwards compatibility with old waypoint format\n        routePath = route.waypoints;\n      }\n\n      // Fallback handling for missing waypoints\n      if (routePath.length === 0) {\n        const originCoords = locations[route.routePath?.[0] || origin];\n        const destCoords = locations[route.routePath?.[route.routePath.length - 1] || destination];\n\n        const primaryMode = route.transportModes?.[0] || 'truck';\n\n\n\n        // Final fallback to curved path\n        if (routePath.length === 0 && originCoords && destCoords) {\n          routePath = generateCurvedPath(originCoords, destCoords, primaryMode);\n        }\n      }\n\n      return {\n        id: route.id || `route-${index}`,\n        name: route.name || `Route ${index + 1}`,\n        transportModes: route.transportModes || ['truck'],\n        routePath,\n        distance: route.distance,\n        estimatedTime: route.estimatedTime,\n        estimatedCost: route.estimatedCost,\n        routingMethod: route.routingMethod,\n        fallback: route.fallback || false,\n        selected: selectedRoute && selectedRoute.id === route.id\n      };\n    }).filter(route => route !== null && route.routePath.length > 0);\n\n    setRouteData(processedRoutes);\n  }\n}, [routeOptions, selectedRoute, origin, destination]);\n\n  // Format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"route-map-container\">\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        {/* Map Header */}\n        <div className=\"bg-blue-600 text-white px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"font-semibold flex items-center gap-2\">\n              🗺️ Interactive Route Visualization\n              {routeData.length > 0 && (\n                <span className=\"text-blue-200 text-sm\">\n                  ({routeData.length} route{routeData.length !== 1 ? 's' : ''})\n                </span>\n              )}\n            </h3>\n            \n            {/* Legend */}\n            <div className=\"flex items-center gap-4 text-sm\">\n              {Object.entries(transportStyles).map(([mode, style]) => (\n                <div key={mode} className=\"flex items-center gap-1\">\n                  <div \n                    className=\"w-4 h-1\" \n                    style={{ \n                      backgroundColor: style.color,\n                      borderStyle: style.dashArray ? 'dashed' : 'solid',\n                      borderWidth: '1px'\n                    }}\n                  ></div>\n                  <span className=\"capitalize\">{mode}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Map */}\n        <div style={{ height, width: '100%' }}>\n          <MapContainer\n            center={mapCenter}\n            zoom={mapZoom}\n            style={{ height: '100%', width: '100%' }}\n            scrollWheelZoom={true}\n          >\n            <TileLayer\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <TileLayer\n              attribution='&copy; <a href=\"https://www.openseamap.org\">OpenSeaMap</a> contributors'\n              url=\"https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png\"\n              opacity={0.7}\n            />\n\n            <LayersControl position=\"topright\">\n              {/* Route Layers */}\n              {routeData.map((route) => (\n                <LayersControl.Overlay \n                  key={route.id} \n                  name={route.name}\n                  checked={showAllRoutes || route.selected}\n                >\n                  <FeatureGroup>\n                    {/* Route line */}\n                    {route.routePath.length >= 2 && route.transportModes.map((mode, modeIndex) => {\n                      const style = transportStyles[mode] || transportStyles.truck;\n                      \n                      return (\n                        <Polyline\n                          key={`${route.id}-${mode}-${modeIndex}`}\n                          positions={route.routePath}\n                          pathOptions={{\n                            color: style.color,\n                            weight: style.weight,\n                            opacity: route.selected ? 1.0 : style.opacity,\n                            dashArray: style.dashArray\n                          }}\n                          eventHandlers={{\n                            click: () => {\n                              if (onRouteSelect) {\n                                onRouteSelect(route);\n                              }\n                            }\n                          }}\n                        >\n                          <Popup>\n                            <div className=\"min-w-64\">\n                              <h4 className=\"font-semibold text-blue-600 mb-2\">{route.name}</h4>\n                              <div className=\"space-y-1 text-sm\">\n                                <div><strong>Distance:</strong> {route.distance} miles</div>\n                                <div><strong>Time:</strong> {route.estimatedTime}</div>\n                                <div><strong>Cost:</strong> {formatCurrency(route.estimatedCost)}</div>\n                                {route.routingMethod && (\n                                  <div><strong>Method:</strong> {route.routingMethod.replace(/_/g, ' ')}</div>\n                                )}\n                                {route.fallback && (\n                                  <div className=\"text-yellow-600\"><strong>⚠️ Estimated route</strong></div>\n                                )}\n                              </div>\n                            </div>\n                          </Popup>\n                        </Polyline>\n                      );\n                    })}\n\n                    {/* Route waypoint markers */}\n                    {route.routePath.map((coords, index) => {\n                      const isOrigin = index === 0;\n                      const isDestination = index === route.routePath.length - 1;\n                      const isWaypoint = !isOrigin && !isDestination;\n\n                      let markerColor = '#6b7280'; // Default gray\n                      let markerSymbol = '📍';\n                      let markerSize = 30;\n\n                      if (isOrigin) {\n                        markerColor = '#10b981'; // Green\n                        markerSymbol = '📍';\n                      } else if (isDestination) {\n                        markerColor = '#ef4444'; // Red\n                        markerSymbol = '📍';\n                      } else if (isWaypoint) {\n                        markerColor = '#f59e0b'; // Yellow\n                        markerSymbol = '🟡';\n                        markerSize = 15;\n                      }\n\n                      return (\n                        <Marker\n                          key={`${route.id}-marker-${index}`}\n                          position={coords}\n                          icon={createCustomIcon(markerColor, markerSymbol, markerSize)}\n                        >\n                          <Popup>\n                            <div className=\"text-sm\">\n                              <div className=\"font-semibold\">\n                                {isOrigin ? 'Origin' : isDestination ? 'Destination' : 'Waypoint'}\n                              </div>\n                              <div>Coordinates: {coords[0].toFixed(4)}, {coords[1].toFixed(4)}</div>\n                            </div>\n                          </Popup>\n                        </Marker>\n                      );\n                    })}\n                  </FeatureGroup>\n                </LayersControl.Overlay>\n              ))}\n\n              {/* All Locations Layer */}\n              <LayersControl.Overlay name=\"All Ports & Hubs\" checked={false}>\n                <FeatureGroup>\n                  {Object.entries(locations).map(([name, coords]) => (\n                    <Marker\n                      key={name}\n                      position={coords}\n                      icon={createCustomIcon('#6366f1', '🏭')}\n                    >\n                      <Popup>\n                        <div className=\"text-sm\">\n                          <div className=\"font-semibold\">{name}</div>\n                          <div>Coordinates: {coords[0].toFixed(4)}, {coords[1].toFixed(4)}</div>\n                          <div className=\"text-xs text-gray-500 mt-1\">\n                            Available for truck and rail transport\n                          </div>\n                        </div>\n                      </Popup>\n                    </Marker>\n                  ))}\n                </FeatureGroup>\n              </LayersControl.Overlay>\n            </LayersControl>\n          </MapContainer>\n        </div>\n\n        {/* Route Summary */}\n        {routeData.length > 0 && (\n          <div className=\"bg-gray-50 px-4 py-3 border-t\">\n            <div className=\"text-sm text-gray-600\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <strong>Route Summary:</strong> {origin} → {destination}\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  {selectedRoute ? (\n                    <div className=\"text-blue-600\">\n                      <strong>Selected:</strong> {selectedRoute.name}\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-500\">\n                      Click on a route to select it\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RouteMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}